{"ast":null,"code":"const express = require(\"express\");\nconst {\n  addProduct,\n  getProducts\n} = require(\"../controllers/marketplaceController\");\nconst multer = require(\"multer\"); // Ensure multer is properly configured\n\nconst router = express.Router();\n\n// Set up multer middleware for file upload\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, './uploads/'); // Store images in the \"uploads\" folder\n  },\n  filename: (req, file, cb) => {\n    cb(null, Date.now() + path.extname(file.originalname)); // Ensure unique file names\n  }\n});\nconst upload = multer({\n  storage: storage\n});\n\n// POST route to add a product (with file upload)\nrouter.post(\"/add\", upload.single(\"photo\"), addProduct);\n\n// GET route to get all products\nrouter.get(\"/\", getProducts);\nmodule.exports = router;","map":{"version":3,"names":["express","require","addProduct","getProducts","multer","router","Router","storage","diskStorage","destination","req","file","cb","filename","Date","now","path","extname","originalname","upload","post","single","get","module","exports"],"sources":["D:/agri-community/client/src/components/Marketplace/SellProduct.jsx"],"sourcesContent":["const express = require(\"express\");\r\nconst { addProduct, getProducts } = require(\"../controllers/marketplaceController\");\r\nconst multer = require(\"multer\");  // Ensure multer is properly configured\r\n\r\nconst router = express.Router();\r\n\r\n// Set up multer middleware for file upload\r\nconst storage = multer.diskStorage({\r\n  destination: (req, file, cb) => {\r\n    cb(null, './uploads/');  // Store images in the \"uploads\" folder\r\n  },\r\n  filename: (req, file, cb) => {\r\n    cb(null, Date.now() + path.extname(file.originalname));  // Ensure unique file names\r\n  }\r\n});\r\n\r\nconst upload = multer({ storage: storage });\r\n\r\n// POST route to add a product (with file upload)\r\nrouter.post(\"/add\", upload.single(\"photo\"), addProduct);\r\n\r\n// GET route to get all products\r\nrouter.get(\"/\", getProducts);\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC,UAAU;EAAEC;AAAY,CAAC,GAAGF,OAAO,CAAC,sCAAsC,CAAC;AACnF,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAE;;AAEnC,MAAMI,MAAM,GAAGL,OAAO,CAACM,MAAM,CAAC,CAAC;;AAE/B;AACA,MAAMC,OAAO,GAAGH,MAAM,CAACI,WAAW,CAAC;EACjCC,WAAW,EAAEA,CAACC,GAAG,EAAEC,IAAI,EAAEC,EAAE,KAAK;IAC9BA,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAE;EAC3B,CAAC;EACDC,QAAQ,EAAEA,CAACH,GAAG,EAAEC,IAAI,EAAEC,EAAE,KAAK;IAC3BA,EAAE,CAAC,IAAI,EAAEE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,OAAO,CAACN,IAAI,CAACO,YAAY,CAAC,CAAC,CAAC,CAAE;EAC3D;AACF,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGf,MAAM,CAAC;EAAEG,OAAO,EAAEA;AAAQ,CAAC,CAAC;;AAE3C;AACAF,MAAM,CAACe,IAAI,CAAC,MAAM,EAAED,MAAM,CAACE,MAAM,CAAC,OAAO,CAAC,EAAEnB,UAAU,CAAC;;AAEvD;AACAG,MAAM,CAACiB,GAAG,CAAC,GAAG,EAAEnB,WAAW,CAAC;AAE5BoB,MAAM,CAACC,OAAO,GAAGnB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}