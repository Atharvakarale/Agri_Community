{"ast":null,"code":"var _jsxFileName = \"D:\\\\agri-community\\\\client\\\\src\\\\components\\\\CropPrediction\\\\CropPrediction.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport '../../styles/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropPrediction = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    N: \"\",\n    P: \"\",\n    K: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    ph: \"\",\n    rainfall: \"\"\n  });\n  const [prediction, setPrediction] = useState(\"\");\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://127.0.0.1:5000/predict\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    setPrediction(data.predicted_crop || \"Prediction failed\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crop-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crop Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"N\",\n        placeholder: \"Nitrogen\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"P\",\n        placeholder: \"Phosphorus\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"K\",\n        placeholder: \"Potassium\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"temperature\",\n        placeholder: \"Temperature\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"humidity\",\n        placeholder: \"Humidity\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"ph\",\n        placeholder: \"pH Level\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"rainfall\",\n        placeholder: \"Rainfall\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Recommended Crop: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(CropPrediction, \"ZjYEo6qGvPV46i67FviJX81jlTE=\");\n_c = CropPrediction;\nexport default CropPrediction;\nvar _c;\n$RefreshReg$(_c, \"CropPrediction\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CropPrediction","_s","formData","setFormData","N","P","K","temperature","humidity","ph","rainfall","prediction","setPrediction","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","predicted_crop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["D:/agri-community/client/src/components/CropPrediction/CropPrediction.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport '../../styles/'\r\n\r\nconst CropPrediction = () => {\r\n  const [formData, setFormData] = useState({\r\n    N: \"\", P: \"\", K: \"\", temperature: \"\", humidity: \"\", ph: \"\", rainfall: \"\",\r\n  });\r\n\r\n  const [prediction, setPrediction] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(\"http://127.0.0.1:5000/predict\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(formData),\r\n    });\r\n\r\n    const data = await response.json();\r\n    setPrediction(data.predicted_crop || \"Prediction failed\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"crop-container\">\r\n      <h2>Crop Prediction</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"number\" name=\"N\" placeholder=\"Nitrogen\" onChange={handleChange} required />\r\n        <input type=\"number\" name=\"P\" placeholder=\"Phosphorus\" onChange={handleChange} required />\r\n        <input type=\"number\" name=\"K\" placeholder=\"Potassium\" onChange={handleChange} required />\r\n        <input type=\"number\" name=\"temperature\" placeholder=\"Temperature\" onChange={handleChange} required />\r\n        <input type=\"number\" name=\"humidity\" placeholder=\"Humidity\" onChange={handleChange} required />\r\n        <input type=\"number\" name=\"ph\" placeholder=\"pH Level\" onChange={handleChange} required />\r\n        <input type=\"number\" name=\"rainfall\" placeholder=\"Rainfall\" onChange={handleChange} required />\r\n        <button type=\"submit\">Predict</button>\r\n      </form>\r\n      {prediction && <h3>Recommended Crop: {prediction}</h3>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CropPrediction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}