{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Api\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DomainPage = exports.DomainListInstance = exports.DomainInstance = exports.DomainContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nconst authTypes_1 = require(\"./domain/authTypes\");\nconst credentialListMapping_1 = require(\"./domain/credentialListMapping\");\nconst ipAccessControlListMapping_1 = require(\"./domain/ipAccessControlListMapping\");\nclass DomainContextImpl {\n  constructor(_version, accountSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(accountSid)) {\n      throw new Error(\"Parameter 'accountSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      accountSid,\n      sid\n    };\n    this._uri = `/Accounts/${accountSid}/SIP/Domains/${sid}.json`;\n  }\n  get auth() {\n    this._auth = this._auth || (0, authTypes_1.AuthTypesListInstance)(this._version, this._solution.accountSid, this._solution.sid);\n    return this._auth;\n  }\n  get credentialListMappings() {\n    this._credentialListMappings = this._credentialListMappings || (0, credentialListMapping_1.CredentialListMappingListInstance)(this._version, this._solution.accountSid, this._solution.sid);\n    return this._credentialListMappings;\n  }\n  get ipAccessControlListMappings() {\n    this._ipAccessControlListMappings = this._ipAccessControlListMappings || (0, ipAccessControlListMapping_1.IpAccessControlListMappingListInstance)(this._version, this._solution.accountSid, this._solution.sid);\n    return this._ipAccessControlListMappings;\n  }\n  remove(callback) {\n    const headers = {};\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\",\n        headers\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new DomainInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"voiceFallbackMethod\"] !== undefined) data[\"VoiceFallbackMethod\"] = params[\"voiceFallbackMethod\"];\n    if (params[\"voiceFallbackUrl\"] !== undefined) data[\"VoiceFallbackUrl\"] = params[\"voiceFallbackUrl\"];\n    if (params[\"voiceMethod\"] !== undefined) data[\"VoiceMethod\"] = params[\"voiceMethod\"];\n    if (params[\"voiceStatusCallbackMethod\"] !== undefined) data[\"VoiceStatusCallbackMethod\"] = params[\"voiceStatusCallbackMethod\"];\n    if (params[\"voiceStatusCallbackUrl\"] !== undefined) data[\"VoiceStatusCallbackUrl\"] = params[\"voiceStatusCallbackUrl\"];\n    if (params[\"voiceUrl\"] !== undefined) data[\"VoiceUrl\"] = params[\"voiceUrl\"];\n    if (params[\"sipRegistration\"] !== undefined) data[\"SipRegistration\"] = serialize.bool(params[\"sipRegistration\"]);\n    if (params[\"domainName\"] !== undefined) data[\"DomainName\"] = params[\"domainName\"];\n    if (params[\"emergencyCallingEnabled\"] !== undefined) data[\"EmergencyCallingEnabled\"] = serialize.bool(params[\"emergencyCallingEnabled\"]);\n    if (params[\"secure\"] !== undefined) data[\"Secure\"] = serialize.bool(params[\"secure\"]);\n    if (params[\"byocTrunkSid\"] !== undefined) data[\"ByocTrunkSid\"] = params[\"byocTrunkSid\"];\n    if (params[\"emergencyCallerSid\"] !== undefined) data[\"EmergencyCallerSid\"] = params[\"emergencyCallerSid\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new DomainInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.DomainContextImpl = DomainContextImpl;\nclass DomainInstance {\n  constructor(_version, payload, accountSid, sid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.apiVersion = payload.api_version;\n    this.authType = payload.auth_type;\n    this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);\n    this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated);\n    this.domainName = payload.domain_name;\n    this.friendlyName = payload.friendly_name;\n    this.sid = payload.sid;\n    this.uri = payload.uri;\n    this.voiceFallbackMethod = payload.voice_fallback_method;\n    this.voiceFallbackUrl = payload.voice_fallback_url;\n    this.voiceMethod = payload.voice_method;\n    this.voiceStatusCallbackMethod = payload.voice_status_callback_method;\n    this.voiceStatusCallbackUrl = payload.voice_status_callback_url;\n    this.voiceUrl = payload.voice_url;\n    this.subresourceUris = payload.subresource_uris;\n    this.sipRegistration = payload.sip_registration;\n    this.emergencyCallingEnabled = payload.emergency_calling_enabled;\n    this.secure = payload.secure;\n    this.byocTrunkSid = payload.byoc_trunk_sid;\n    this.emergencyCallerSid = payload.emergency_caller_sid;\n    this._solution = {\n      accountSid,\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new DomainContextImpl(this._version, this._solution.accountSid, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a DomainInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a DomainInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed DomainInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Access the auth.\n   */\n  auth() {\n    return this._proxy.auth;\n  }\n  /**\n   * Access the credentialListMappings.\n   */\n  credentialListMappings() {\n    return this._proxy.credentialListMappings;\n  }\n  /**\n   * Access the ipAccessControlListMappings.\n   */\n  ipAccessControlListMappings() {\n    return this._proxy.ipAccessControlListMappings;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      apiVersion: this.apiVersion,\n      authType: this.authType,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      domainName: this.domainName,\n      friendlyName: this.friendlyName,\n      sid: this.sid,\n      uri: this.uri,\n      voiceFallbackMethod: this.voiceFallbackMethod,\n      voiceFallbackUrl: this.voiceFallbackUrl,\n      voiceMethod: this.voiceMethod,\n      voiceStatusCallbackMethod: this.voiceStatusCallbackMethod,\n      voiceStatusCallbackUrl: this.voiceStatusCallbackUrl,\n      voiceUrl: this.voiceUrl,\n      subresourceUris: this.subresourceUris,\n      sipRegistration: this.sipRegistration,\n      emergencyCallingEnabled: this.emergencyCallingEnabled,\n      secure: this.secure,\n      byocTrunkSid: this.byocTrunkSid,\n      emergencyCallerSid: this.emergencyCallerSid\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.DomainInstance = DomainInstance;\nfunction DomainListInstance(version, accountSid) {\n  if (!(0, utility_1.isValidPathParam)(accountSid)) {\n    throw new Error(\"Parameter 'accountSid' is not valid.\");\n  }\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new DomainContextImpl(version, accountSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    accountSid\n  };\n  instance._uri = `/Accounts/${accountSid}/SIP/Domains.json`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"domainName\"] === null || params[\"domainName\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['domainName']\\\" missing.\");\n    }\n    let data = {};\n    data[\"DomainName\"] = params[\"domainName\"];\n    if (params[\"friendlyName\"] !== undefined) data[\"FriendlyName\"] = params[\"friendlyName\"];\n    if (params[\"voiceUrl\"] !== undefined) data[\"VoiceUrl\"] = params[\"voiceUrl\"];\n    if (params[\"voiceMethod\"] !== undefined) data[\"VoiceMethod\"] = params[\"voiceMethod\"];\n    if (params[\"voiceFallbackUrl\"] !== undefined) data[\"VoiceFallbackUrl\"] = params[\"voiceFallbackUrl\"];\n    if (params[\"voiceFallbackMethod\"] !== undefined) data[\"VoiceFallbackMethod\"] = params[\"voiceFallbackMethod\"];\n    if (params[\"voiceStatusCallbackUrl\"] !== undefined) data[\"VoiceStatusCallbackUrl\"] = params[\"voiceStatusCallbackUrl\"];\n    if (params[\"voiceStatusCallbackMethod\"] !== undefined) data[\"VoiceStatusCallbackMethod\"] = params[\"voiceStatusCallbackMethod\"];\n    if (params[\"sipRegistration\"] !== undefined) data[\"SipRegistration\"] = serialize.bool(params[\"sipRegistration\"]);\n    if (params[\"emergencyCallingEnabled\"] !== undefined) data[\"EmergencyCallingEnabled\"] = serialize.bool(params[\"emergencyCallingEnabled\"]);\n    if (params[\"secure\"] !== undefined) data[\"Secure\"] = serialize.bool(params[\"secure\"]);\n    if (params[\"byocTrunkSid\"] !== undefined) data[\"ByocTrunkSid\"] = params[\"byocTrunkSid\"];\n    if (params[\"emergencyCallerSid\"] !== undefined) data[\"EmergencyCallerSid\"] = params[\"emergencyCallerSid\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new DomainInstance(operationVersion, payload, instance._solution.accountSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new DomainPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new DomainPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.DomainListInstance = DomainListInstance;\nclass DomainPage extends Page_1.default {\n  /**\n   * Initialize the DomainPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of DomainInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new DomainInstance(this._version, payload, this._solution.accountSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.DomainPage = DomainPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","DomainPage","DomainListInstance","DomainInstance","DomainContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","authTypes_1","credentialListMapping_1","ipAccessControlListMapping_1","constructor","_version","accountSid","sid","isValidPathParam","Error","_solution","_uri","auth","_auth","AuthTypesListInstance","credentialListMappings","_credentialListMappings","CredentialListMappingListInstance","ipAccessControlListMappings","_ipAccessControlListMappings","IpAccessControlListMappingListInstance","remove","callback","headers","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","Function","data","undefined","bool","toJSON","inspect","custom","_depth","options","account_sid","apiVersion","api_version","authType","auth_type","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","domainName","domain_name","friendlyName","friendly_name","voiceFallbackMethod","voice_fallback_method","voiceFallbackUrl","voice_fallback_url","voiceMethod","voice_method","voiceStatusCallbackMethod","voice_status_callback_method","voiceStatusCallbackUrl","voice_status_callback_url","voiceUrl","voice_url","subresourceUris","subresource_uris","sipRegistration","sip_registration","emergencyCallingEnabled","emergency_calling_enabled","secure","byocTrunkSid","byoc_trunk_sid","emergencyCallerSid","emergency_caller_sid","_proxy","_context","version","get","create","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["D:/agri-community/client/node_modules/twilio/lib/rest/api/v2010/account/sip/domain.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Api\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DomainPage = exports.DomainListInstance = exports.DomainInstance = exports.DomainContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nconst authTypes_1 = require(\"./domain/authTypes\");\nconst credentialListMapping_1 = require(\"./domain/credentialListMapping\");\nconst ipAccessControlListMapping_1 = require(\"./domain/ipAccessControlListMapping\");\nclass DomainContextImpl {\n    constructor(_version, accountSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(accountSid)) {\n            throw new Error(\"Parameter 'accountSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { accountSid, sid };\n        this._uri = `/Accounts/${accountSid}/SIP/Domains/${sid}.json`;\n    }\n    get auth() {\n        this._auth =\n            this._auth ||\n                (0, authTypes_1.AuthTypesListInstance)(this._version, this._solution.accountSid, this._solution.sid);\n        return this._auth;\n    }\n    get credentialListMappings() {\n        this._credentialListMappings =\n            this._credentialListMappings ||\n                (0, credentialListMapping_1.CredentialListMappingListInstance)(this._version, this._solution.accountSid, this._solution.sid);\n        return this._credentialListMappings;\n    }\n    get ipAccessControlListMappings() {\n        this._ipAccessControlListMappings =\n            this._ipAccessControlListMappings ||\n                (0, ipAccessControlListMapping_1.IpAccessControlListMappingListInstance)(this._version, this._solution.accountSid, this._solution.sid);\n        return this._ipAccessControlListMappings;\n    }\n    remove(callback) {\n        const headers = {};\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n            headers,\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new DomainInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"voiceFallbackMethod\"] !== undefined)\n            data[\"VoiceFallbackMethod\"] = params[\"voiceFallbackMethod\"];\n        if (params[\"voiceFallbackUrl\"] !== undefined)\n            data[\"VoiceFallbackUrl\"] = params[\"voiceFallbackUrl\"];\n        if (params[\"voiceMethod\"] !== undefined)\n            data[\"VoiceMethod\"] = params[\"voiceMethod\"];\n        if (params[\"voiceStatusCallbackMethod\"] !== undefined)\n            data[\"VoiceStatusCallbackMethod\"] = params[\"voiceStatusCallbackMethod\"];\n        if (params[\"voiceStatusCallbackUrl\"] !== undefined)\n            data[\"VoiceStatusCallbackUrl\"] = params[\"voiceStatusCallbackUrl\"];\n        if (params[\"voiceUrl\"] !== undefined)\n            data[\"VoiceUrl\"] = params[\"voiceUrl\"];\n        if (params[\"sipRegistration\"] !== undefined)\n            data[\"SipRegistration\"] = serialize.bool(params[\"sipRegistration\"]);\n        if (params[\"domainName\"] !== undefined)\n            data[\"DomainName\"] = params[\"domainName\"];\n        if (params[\"emergencyCallingEnabled\"] !== undefined)\n            data[\"EmergencyCallingEnabled\"] = serialize.bool(params[\"emergencyCallingEnabled\"]);\n        if (params[\"secure\"] !== undefined)\n            data[\"Secure\"] = serialize.bool(params[\"secure\"]);\n        if (params[\"byocTrunkSid\"] !== undefined)\n            data[\"ByocTrunkSid\"] = params[\"byocTrunkSid\"];\n        if (params[\"emergencyCallerSid\"] !== undefined)\n            data[\"EmergencyCallerSid\"] = params[\"emergencyCallerSid\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new DomainInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.DomainContextImpl = DomainContextImpl;\nclass DomainInstance {\n    constructor(_version, payload, accountSid, sid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.apiVersion = payload.api_version;\n        this.authType = payload.auth_type;\n        this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);\n        this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated);\n        this.domainName = payload.domain_name;\n        this.friendlyName = payload.friendly_name;\n        this.sid = payload.sid;\n        this.uri = payload.uri;\n        this.voiceFallbackMethod = payload.voice_fallback_method;\n        this.voiceFallbackUrl = payload.voice_fallback_url;\n        this.voiceMethod = payload.voice_method;\n        this.voiceStatusCallbackMethod = payload.voice_status_callback_method;\n        this.voiceStatusCallbackUrl = payload.voice_status_callback_url;\n        this.voiceUrl = payload.voice_url;\n        this.subresourceUris = payload.subresource_uris;\n        this.sipRegistration = payload.sip_registration;\n        this.emergencyCallingEnabled = payload.emergency_calling_enabled;\n        this.secure = payload.secure;\n        this.byocTrunkSid = payload.byoc_trunk_sid;\n        this.emergencyCallerSid = payload.emergency_caller_sid;\n        this._solution = { accountSid, sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new DomainContextImpl(this._version, this._solution.accountSid, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a DomainInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a DomainInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed DomainInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Access the auth.\n     */\n    auth() {\n        return this._proxy.auth;\n    }\n    /**\n     * Access the credentialListMappings.\n     */\n    credentialListMappings() {\n        return this._proxy.credentialListMappings;\n    }\n    /**\n     * Access the ipAccessControlListMappings.\n     */\n    ipAccessControlListMappings() {\n        return this._proxy.ipAccessControlListMappings;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            apiVersion: this.apiVersion,\n            authType: this.authType,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            domainName: this.domainName,\n            friendlyName: this.friendlyName,\n            sid: this.sid,\n            uri: this.uri,\n            voiceFallbackMethod: this.voiceFallbackMethod,\n            voiceFallbackUrl: this.voiceFallbackUrl,\n            voiceMethod: this.voiceMethod,\n            voiceStatusCallbackMethod: this.voiceStatusCallbackMethod,\n            voiceStatusCallbackUrl: this.voiceStatusCallbackUrl,\n            voiceUrl: this.voiceUrl,\n            subresourceUris: this.subresourceUris,\n            sipRegistration: this.sipRegistration,\n            emergencyCallingEnabled: this.emergencyCallingEnabled,\n            secure: this.secure,\n            byocTrunkSid: this.byocTrunkSid,\n            emergencyCallerSid: this.emergencyCallerSid,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.DomainInstance = DomainInstance;\nfunction DomainListInstance(version, accountSid) {\n    if (!(0, utility_1.isValidPathParam)(accountSid)) {\n        throw new Error(\"Parameter 'accountSid' is not valid.\");\n    }\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new DomainContextImpl(version, accountSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { accountSid };\n    instance._uri = `/Accounts/${accountSid}/SIP/Domains.json`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"domainName\"] === null || params[\"domainName\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['domainName']\\\" missing.\");\n        }\n        let data = {};\n        data[\"DomainName\"] = params[\"domainName\"];\n        if (params[\"friendlyName\"] !== undefined)\n            data[\"FriendlyName\"] = params[\"friendlyName\"];\n        if (params[\"voiceUrl\"] !== undefined)\n            data[\"VoiceUrl\"] = params[\"voiceUrl\"];\n        if (params[\"voiceMethod\"] !== undefined)\n            data[\"VoiceMethod\"] = params[\"voiceMethod\"];\n        if (params[\"voiceFallbackUrl\"] !== undefined)\n            data[\"VoiceFallbackUrl\"] = params[\"voiceFallbackUrl\"];\n        if (params[\"voiceFallbackMethod\"] !== undefined)\n            data[\"VoiceFallbackMethod\"] = params[\"voiceFallbackMethod\"];\n        if (params[\"voiceStatusCallbackUrl\"] !== undefined)\n            data[\"VoiceStatusCallbackUrl\"] = params[\"voiceStatusCallbackUrl\"];\n        if (params[\"voiceStatusCallbackMethod\"] !== undefined)\n            data[\"VoiceStatusCallbackMethod\"] = params[\"voiceStatusCallbackMethod\"];\n        if (params[\"sipRegistration\"] !== undefined)\n            data[\"SipRegistration\"] = serialize.bool(params[\"sipRegistration\"]);\n        if (params[\"emergencyCallingEnabled\"] !== undefined)\n            data[\"EmergencyCallingEnabled\"] = serialize.bool(params[\"emergencyCallingEnabled\"]);\n        if (params[\"secure\"] !== undefined)\n            data[\"Secure\"] = serialize.bool(params[\"secure\"]);\n        if (params[\"byocTrunkSid\"] !== undefined)\n            data[\"ByocTrunkSid\"] = params[\"byocTrunkSid\"];\n        if (params[\"emergencyCallerSid\"] !== undefined)\n            data[\"EmergencyCallerSid\"] = params[\"emergencyCallerSid\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new DomainInstance(operationVersion, payload, instance._solution.accountSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new DomainPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new DomainPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.DomainListInstance = DomainListInstance;\nclass DomainPage extends Page_1.default {\n    /**\n     * Initialize the DomainPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of DomainInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new DomainInstance(this._version, payload, this._solution.accountSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.DomainPage = DomainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}