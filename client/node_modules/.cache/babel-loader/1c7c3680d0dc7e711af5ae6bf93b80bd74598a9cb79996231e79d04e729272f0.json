{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import \"../../styles/buyproduct.css\";\n\n// const BuyProduct = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/marketplace\")\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data));\n//   }, []);\n\n//   const handleVideoCall = async (sellerPhone, productName) => {\n//     if (!sellerPhone || !productName) {\n//       alert(\"Seller phone or product name is missing!\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ sellerPhone, productName }),\n//       });\n\n//       const data = await response.json();\n\n//       if (!response.ok) {\n//         throw new Error(data.error || \"Failed to create video call link\");\n//       }\n\n//       window.open(data.meetingLink, \"_blank\");\n//       alert(`Video call link sent to seller: ${data.meetingLink}`);\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"Error starting video call.\");\n//     }\n//   };\n\n//   const handleBuy = async (productId, price, sellerEmail) => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ productId, price, sellerEmail }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Payment creation failed');\n//       }\n\n//       const data = await response.json();\n//       const razorpayOrderId = data.id;\n\n//       const options = {\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n//         amount: price * 100,\n//         currency: 'INR',\n//         order_id: razorpayOrderId,\n//         handler: function () {\n//           alert('Payment successful!');\n//         },\n//         prefill: {\n//           name: 'Buyer Name',\n//           email: 'buyer@example.com',\n//           contact: '1234567890',\n//         },\n//         theme: { color: '#00b894' },\n//       };\n\n//       const rzp1 = new window.Razorpay(options);\n//       rzp1.open();\n//     } catch (error) {\n//       console.error('Payment error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"buy-product-container\">\n//       <h2 className=\"title\">Available Products</h2>\n//       <div className=\"product-list\">\n//         {products.map((product) => (\n//           <div key={product._id} className=\"product-card\">\n//             <img src={product.image} alt={product.name} className=\"product-image\" />\n//             <div className=\"product-info\">\n//               <h3>{product.name}</h3>\n//               <p className=\"description\">{product.description}</p>\n//               <p className=\"price\">Price: ₹{product.price}</p>\n//               <p className=\"seller\">Seller: {product.seller}</p>\n//               <div className=\"button-group\">\n//                 <button className=\"buy-button\" onClick={() => handleBuy(product._id, product.price, product.seller)}>\n//                   Buy Now\n//                 </button>\n//                 <button className=\"video-call-button\" onClick={() => handleVideoCall(product.phone, product.name)}>\n//                   Video Call Seller\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BuyProduct;","map":{"version":3,"names":[],"sources":["D:/agri-community/client/src/components/Marketplace/BuyProduct.jsx"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import \"../../styles/buyproduct.css\";\r\n\r\n// const BuyProduct = () => {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/marketplace\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProducts(data));\r\n//   }, []);\r\n\r\n//   const handleVideoCall = async (sellerPhone, productName) => {\r\n//     if (!sellerPhone || !productName) {\r\n//       alert(\"Seller phone or product name is missing!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ sellerPhone, productName }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(data.error || \"Failed to create video call link\");\r\n//       }\r\n\r\n//       window.open(data.meetingLink, \"_blank\");\r\n//       alert(`Video call link sent to seller: ${data.meetingLink}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"Error starting video call.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleBuy = async (productId, price, sellerEmail) => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ productId, price, sellerEmail }),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Payment creation failed');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       const razorpayOrderId = data.id;\r\n\r\n//       const options = {\r\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n//         amount: price * 100,\r\n//         currency: 'INR',\r\n//         order_id: razorpayOrderId,\r\n//         handler: function () {\r\n//           alert('Payment successful!');\r\n//         },\r\n//         prefill: {\r\n//           name: 'Buyer Name',\r\n//           email: 'buyer@example.com',\r\n//           contact: '1234567890',\r\n//         },\r\n//         theme: { color: '#00b894' },\r\n//       };\r\n\r\n//       const rzp1 = new window.Razorpay(options);\r\n//       rzp1.open();\r\n//     } catch (error) {\r\n//       console.error('Payment error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"buy-product-container\">\r\n//       <h2 className=\"title\">Available Products</h2>\r\n//       <div className=\"product-list\">\r\n//         {products.map((product) => (\r\n//           <div key={product._id} className=\"product-card\">\r\n//             <img src={product.image} alt={product.name} className=\"product-image\" />\r\n//             <div className=\"product-info\">\r\n//               <h3>{product.name}</h3>\r\n//               <p className=\"description\">{product.description}</p>\r\n//               <p className=\"price\">Price: ₹{product.price}</p>\r\n//               <p className=\"seller\">Seller: {product.seller}</p>\r\n//               <div className=\"button-group\">\r\n//                 <button className=\"buy-button\" onClick={() => handleBuy(product._id, product.price, product.seller)}>\r\n//                   Buy Now\r\n//                 </button>\r\n//                 <button className=\"video-call-button\" onClick={() => handleVideoCall(product.phone, product.name)}>\r\n//                   Video Call Seller\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BuyProduct;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}