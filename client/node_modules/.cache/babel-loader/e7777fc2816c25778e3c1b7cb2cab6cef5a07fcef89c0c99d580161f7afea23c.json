{"ast":null,"code":"var _jsxFileName = \"D:\\\\agri-community\\\\client\\\\src\\\\components\\\\Marketplace\\\\BuyProduct.jsx\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import \"../../styles/buyproduct.css\";\n\n// const BuyProduct = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/marketplace\")\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data));\n//   }, []);\n\n//   const handleVideoCall = async (sellerPhone, productName) => {\n//     if (!sellerPhone || !productName) {\n//       alert(\"Seller phone or product name is missing!\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ sellerPhone, productName }),\n//       });\n\n//       const data = await response.json();\n\n//       if (!response.ok) {\n//         throw new Error(data.error || \"Failed to create video call link\");\n//       }\n\n//       window.open(data.meetingLink, \"_blank\");\n//       alert(`Video call link sent to seller: ${data.meetingLink}`);\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"Error starting video call.\");\n//     }\n//   };\n\n//   const handleBuy = async (productId, price, sellerEmail) => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ productId, price, sellerEmail }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Payment creation failed');\n//       }\n\n//       const data = await response.json();\n//       const razorpayOrderId = data.id;\n\n//       const options = {\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n//         amount: price * 100,\n//         currency: 'INR',\n//         order_id: razorpayOrderId,\n//         handler: function () {\n//           alert('Payment successful!');\n//         },\n//         prefill: {\n//           name: 'Buyer Name',\n//           email: 'buyer@example.com',\n//           contact: '1234567890',\n//         },\n//         theme: { color: '#00b894' },\n//       };\n\n//       const rzp1 = new window.Razorpay(options);\n//       rzp1.open();\n//     } catch (error) {\n//       console.error('Payment error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"buy-product-container\">\n//       <h2 className=\"title\">Available Products</h2>\n//       <div className=\"product-list\">\n//         {products.map((product) => (\n//           <div key={product._id} className=\"product-card\">\n//             <img src={product.image} alt={product.name} className=\"product-image\" />\n//             <div className=\"product-info\">\n//               <h3>{product.name}</h3>\n//               <p className=\"description\">{product.description}</p>\n//               <p className=\"price\">Price: ₹{product.price}</p>\n//               <p className=\"seller\">Seller: {product.seller}</p>\n//               <div className=\"button-group\">\n//                 <button className=\"buy-button\" onClick={() => handleBuy(product._id, product.price, product.seller)}>\n//                   Buy Now\n//                 </button>\n//                 <button className=\"video-call-button\" onClick={() => handleVideoCall(product.phone, product.name)}>\n//                   Video Call Seller\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BuyProduct;\n\n// import { useState, useEffect } from \"react\";\n// import \"../../styles/buyproduct.css\";\n\n// const BuyProduct = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/marketplace\")\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data));\n//   }, []);\n\n//   const handleVideoCall = async (sellerPhone, productName) => {\n//     if (!sellerPhone || !productName) {\n//       alert(\"Seller phone or product name is missing!\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ sellerPhone, productName }),\n//       });\n\n//       const data = await response.json();\n\n//       if (!response.ok) {\n//         throw new Error(data.error || \"Failed to create video call link\");\n//       }\n\n//       window.open(data.meetingLink, \"_blank\");\n//       alert(`Video call link sent to seller: ${data.meetingLink}`);\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"Error starting video call.\");\n//     }\n//   };\n\n//   const handleBuy = async (productId, price, sellerEmail) => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ productId, price, sellerEmail }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Payment creation failed');\n//       }\n\n//       const data = await response.json();\n//       const razorpayOrderId = data.id;\n\n//       const options = {\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n//         amount: price * 100,\n//         currency: 'INR',\n//         order_id: razorpayOrderId,\n//         handler: function () {\n//           alert('Payment successful!');\n//         },\n//         prefill: {\n//           name: 'Buyer Name',\n//           email: 'buyer@example.com',\n//           contact: '1234567890',\n//         },\n//         theme: { color: '#00b894' },\n//       };\n\n//       const rzp1 = new window.Razorpay(options);\n//       rzp1.open();\n//     } catch (error) {\n//       console.error('Payment error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"buy-product-container\">\n//       <h2 className=\"title\">Available Products</h2>\n//       <div className=\"product-grid\">\n//         {products.map((product) => (\n//           <div key={product._id} className=\"product-card\">\n//             <img\n//               src={product.image ? `http://localhost:5000/${product.image}` : \"default-product.jpg\"}\n//               alt={product.name}\n//               className=\"product-image\"\n//             />\n//             <div className=\"product-info\">\n//               <h3>{product.name}</h3>\n//               <p className=\"description\">{product.description}</p>\n//               <p className=\"price\">₹{product.price}</p>\n//               <p className=\"seller\">Seller: {product.seller}</p>\n//               <div className=\"button-group\">\n//                 <button className=\"buy-button\" onClick={() => handleBuy(product._id, product.price, product.seller)}>\n//                   Buy Now\n//                 </button>\n//                 <button className=\"video-call-button\" onClick={() => handleVideoCall(product.phone, product.name)}>\n//                   Video Call Seller\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BuyProduct;\n\nimport { useState, useEffect } from \"react\";\nimport \"../../styles/buyproduct.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuyProduct = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/marketplace\").then(response => response.json()).then(data => setProducts(data)).catch(error => console.error(\"Error fetching products:\", error));\n  }, []);\n  const handleVideoCall = async (sellerPhone, productName) => {\n    if (!sellerPhone || !productName) {\n      alert(\"Seller phone or product name is missing!\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sellerPhone,\n          productName\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Failed to create video call link\");\n      }\n      window.open(data.meetingLink, \"_blank\");\n      alert(`Video call link sent to seller: ${data.meetingLink}`);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error starting video call.\");\n    }\n  };\n  const handleBuy = async (productId, price, sellerEmail) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/payment/payment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          productId,\n          price,\n          sellerEmail\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Payment creation failed\");\n      }\n      const data = await response.json();\n      const razorpayOrderId = data.id;\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: price * 100,\n        currency: \"INR\",\n        order_id: razorpayOrderId,\n        handler: function () {\n          alert(\"Payment successful!\");\n        },\n        prefill: {\n          name: \"Buyer Name\",\n          email: \"buyer@example.com\",\n          contact: \"1234567890\"\n        },\n        theme: {\n          color: \"#00b894\"\n        }\n      };\n      const rzp1 = new window.Razorpay(options);\n      rzp1.open();\n    } catch (error) {\n      console.error(\"Payment error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buy-product-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Available Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: products.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-products\",\n        children: \"No products available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this) : products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: worker.photo ? `http://localhost:5000/${product.photo}` : 'default-image.jpg',\n          alt: product.name || \"Product Image\",\n          className: \"product-image\",\n          onError: e => e.target.src = \"default-product.jpg\" // Fallback image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"price\",\n            children: [\"\\u20B9\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"seller\",\n            children: [\"Seller: \", product.seller]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"buy-button\",\n              onClick: () => handleBuy(product._id, product.price, product.seller),\n              children: \"Buy Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"video-call-button\",\n              onClick: () => handleVideoCall(product.phone, product.name),\n              children: \"Video Call Seller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(BuyProduct, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = BuyProduct;\nexport default BuyProduct;\nvar _c;\n$RefreshReg$(_c, \"BuyProduct\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","BuyProduct","_s","products","setProducts","fetch","then","response","json","data","catch","error","console","handleVideoCall","sellerPhone","productName","alert","method","headers","body","JSON","stringify","ok","Error","window","open","meetingLink","handleBuy","productId","price","sellerEmail","razorpayOrderId","id","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","amount","currency","order_id","handler","prefill","name","email","contact","theme","color","rzp1","Razorpay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","product","src","worker","photo","alt","onError","e","target","description","seller","onClick","_id","phone","_c","$RefreshReg$"],"sources":["D:/agri-community/client/src/components/Marketplace/BuyProduct.jsx"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import \"../../styles/buyproduct.css\";\r\n\r\n// const BuyProduct = () => {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/marketplace\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProducts(data));\r\n//   }, []);\r\n\r\n//   const handleVideoCall = async (sellerPhone, productName) => {\r\n//     if (!sellerPhone || !productName) {\r\n//       alert(\"Seller phone or product name is missing!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ sellerPhone, productName }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(data.error || \"Failed to create video call link\");\r\n//       }\r\n\r\n//       window.open(data.meetingLink, \"_blank\");\r\n//       alert(`Video call link sent to seller: ${data.meetingLink}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"Error starting video call.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleBuy = async (productId, price, sellerEmail) => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ productId, price, sellerEmail }),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Payment creation failed');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       const razorpayOrderId = data.id;\r\n\r\n//       const options = {\r\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n//         amount: price * 100,\r\n//         currency: 'INR',\r\n//         order_id: razorpayOrderId,\r\n//         handler: function () {\r\n//           alert('Payment successful!');\r\n//         },\r\n//         prefill: {\r\n//           name: 'Buyer Name',\r\n//           email: 'buyer@example.com',\r\n//           contact: '1234567890',\r\n//         },\r\n//         theme: { color: '#00b894' },\r\n//       };\r\n\r\n//       const rzp1 = new window.Razorpay(options);\r\n//       rzp1.open();\r\n//     } catch (error) {\r\n//       console.error('Payment error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"buy-product-container\">\r\n//       <h2 className=\"title\">Available Products</h2>\r\n//       <div className=\"product-list\">\r\n//         {products.map((product) => (\r\n//           <div key={product._id} className=\"product-card\">\r\n//             <img src={product.image} alt={product.name} className=\"product-image\" />\r\n//             <div className=\"product-info\">\r\n//               <h3>{product.name}</h3>\r\n//               <p className=\"description\">{product.description}</p>\r\n//               <p className=\"price\">Price: ₹{product.price}</p>\r\n//               <p className=\"seller\">Seller: {product.seller}</p>\r\n//               <div className=\"button-group\">\r\n//                 <button className=\"buy-button\" onClick={() => handleBuy(product._id, product.price, product.seller)}>\r\n//                   Buy Now\r\n//                 </button>\r\n//                 <button className=\"video-call-button\" onClick={() => handleVideoCall(product.phone, product.name)}>\r\n//                   Video Call Seller\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BuyProduct;\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import \"../../styles/buyproduct.css\";\r\n\r\n// const BuyProduct = () => {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/marketplace\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProducts(data));\r\n//   }, []);\r\n\r\n//   const handleVideoCall = async (sellerPhone, productName) => {\r\n//     if (!sellerPhone || !productName) {\r\n//       alert(\"Seller phone or product name is missing!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ sellerPhone, productName }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(data.error || \"Failed to create video call link\");\r\n//       }\r\n\r\n//       window.open(data.meetingLink, \"_blank\");\r\n//       alert(`Video call link sent to seller: ${data.meetingLink}`);\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"Error starting video call.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleBuy = async (productId, price, sellerEmail) => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ productId, price, sellerEmail }),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Payment creation failed');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       const razorpayOrderId = data.id;\r\n\r\n//       const options = {\r\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n//         amount: price * 100,\r\n//         currency: 'INR',\r\n//         order_id: razorpayOrderId,\r\n//         handler: function () {\r\n//           alert('Payment successful!');\r\n//         },\r\n//         prefill: {\r\n//           name: 'Buyer Name',\r\n//           email: 'buyer@example.com',\r\n//           contact: '1234567890',\r\n//         },\r\n//         theme: { color: '#00b894' },\r\n//       };\r\n\r\n//       const rzp1 = new window.Razorpay(options);\r\n//       rzp1.open();\r\n//     } catch (error) {\r\n//       console.error('Payment error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"buy-product-container\">\r\n//       <h2 className=\"title\">Available Products</h2>\r\n//       <div className=\"product-grid\">\r\n//         {products.map((product) => (\r\n//           <div key={product._id} className=\"product-card\">\r\n//             <img\r\n//               src={product.image ? `http://localhost:5000/${product.image}` : \"default-product.jpg\"}\r\n//               alt={product.name}\r\n//               className=\"product-image\"\r\n//             />\r\n//             <div className=\"product-info\">\r\n//               <h3>{product.name}</h3>\r\n//               <p className=\"description\">{product.description}</p>\r\n//               <p className=\"price\">₹{product.price}</p>\r\n//               <p className=\"seller\">Seller: {product.seller}</p>\r\n//               <div className=\"button-group\">\r\n//                 <button className=\"buy-button\" onClick={() => handleBuy(product._id, product.price, product.seller)}>\r\n//                   Buy Now\r\n//                 </button>\r\n//                 <button className=\"video-call-button\" onClick={() => handleVideoCall(product.phone, product.name)}>\r\n//                   Video Call Seller\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BuyProduct;\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../../styles/buyproduct.css\";\r\n\r\nconst BuyProduct = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/marketplace\")\r\n      .then((response) => response.json())\r\n      .then((data) => setProducts(data))\r\n      .catch((error) => console.error(\"Error fetching products:\", error));\r\n  }, []);\r\n\r\n  const handleVideoCall = async (sellerPhone, productName) => {\r\n    if (!sellerPhone || !productName) {\r\n      alert(\"Seller phone or product name is missing!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ sellerPhone, productName }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Failed to create video call link\");\r\n      }\r\n\r\n      window.open(data.meetingLink, \"_blank\");\r\n      alert(`Video call link sent to seller: ${data.meetingLink}`);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Error starting video call.\");\r\n    }\r\n  };\r\n\r\n  const handleBuy = async (productId, price, sellerEmail) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/payment/payment\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ productId, price, sellerEmail }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Payment creation failed\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      const razorpayOrderId = data.id;\r\n\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: price * 100,\r\n        currency: \"INR\",\r\n        order_id: razorpayOrderId,\r\n        handler: function () {\r\n          alert(\"Payment successful!\");\r\n        },\r\n        prefill: {\r\n          name: \"Buyer Name\",\r\n          email: \"buyer@example.com\",\r\n          contact: \"1234567890\",\r\n        },\r\n        theme: { color: \"#00b894\" },\r\n      };\r\n\r\n      const rzp1 = new window.Razorpay(options);\r\n      rzp1.open();\r\n    } catch (error) {\r\n      console.error(\"Payment error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"buy-product-container\">\r\n      <h2 className=\"title\">Available Products</h2>\r\n      <div className=\"product-grid\">\r\n        {products.length === 0 ? (\r\n          <p className=\"no-products\">No products available</p>\r\n        ) : (\r\n          products.map((product) => (\r\n            <div key={product._id} className=\"product-card\">\r\n              <img\r\n                src={\r\n                  worker.photo ? `http://localhost:5000/${product.photo}` : 'default-image.jpg'\r\n                }\r\n                alt={product.name || \"Product Image\"}\r\n                className=\"product-image\"\r\n                onError={(e) => (e.target.src = \"default-product.jpg\")} // Fallback image\r\n              />\r\n              <div className=\"product-info\">\r\n                <h3>{product.name}</h3>\r\n                <p className=\"description\">{product.description}</p>\r\n                <p className=\"price\">₹{product.price}</p>\r\n                <p className=\"seller\">Seller: {product.seller}</p>\r\n                <div className=\"button-group\">\r\n                  <button className=\"buy-button\" onClick={() => handleBuy(product._id, product.price, product.seller)}>\r\n                    Buy Now\r\n                  </button>\r\n                  <button className=\"video-call-button\" onClick={() => handleVideoCall(product.phone, product.name)}>\r\n                    Video Call Seller\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyProduct;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}