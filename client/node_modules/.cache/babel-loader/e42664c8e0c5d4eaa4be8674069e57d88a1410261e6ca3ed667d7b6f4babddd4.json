{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Api\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParticipantPage = exports.ParticipantListInstance = exports.ParticipantInstance = exports.ParticipantContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass ParticipantContextImpl {\n  constructor(_version, accountSid, conferenceSid, callSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(accountSid)) {\n      throw new Error(\"Parameter 'accountSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(conferenceSid)) {\n      throw new Error(\"Parameter 'conferenceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(callSid)) {\n      throw new Error(\"Parameter 'callSid' is not valid.\");\n    }\n    this._solution = {\n      accountSid,\n      conferenceSid,\n      callSid\n    };\n    this._uri = `/Accounts/${accountSid}/Conferences/${conferenceSid}/Participants/${callSid}.json`;\n  }\n  remove(callback) {\n    const headers = {};\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\",\n        headers\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ParticipantInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.conferenceSid, instance._solution.callSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"muted\"] !== undefined) data[\"Muted\"] = serialize.bool(params[\"muted\"]);\n    if (params[\"hold\"] !== undefined) data[\"Hold\"] = serialize.bool(params[\"hold\"]);\n    if (params[\"holdUrl\"] !== undefined) data[\"HoldUrl\"] = params[\"holdUrl\"];\n    if (params[\"holdMethod\"] !== undefined) data[\"HoldMethod\"] = params[\"holdMethod\"];\n    if (params[\"announceUrl\"] !== undefined) data[\"AnnounceUrl\"] = params[\"announceUrl\"];\n    if (params[\"announceMethod\"] !== undefined) data[\"AnnounceMethod\"] = params[\"announceMethod\"];\n    if (params[\"waitUrl\"] !== undefined) data[\"WaitUrl\"] = params[\"waitUrl\"];\n    if (params[\"waitMethod\"] !== undefined) data[\"WaitMethod\"] = params[\"waitMethod\"];\n    if (params[\"beepOnExit\"] !== undefined) data[\"BeepOnExit\"] = serialize.bool(params[\"beepOnExit\"]);\n    if (params[\"endConferenceOnExit\"] !== undefined) data[\"EndConferenceOnExit\"] = serialize.bool(params[\"endConferenceOnExit\"]);\n    if (params[\"coaching\"] !== undefined) data[\"Coaching\"] = serialize.bool(params[\"coaching\"]);\n    if (params[\"callSidToCoach\"] !== undefined) data[\"CallSidToCoach\"] = params[\"callSidToCoach\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ParticipantInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.conferenceSid, instance._solution.callSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ParticipantContextImpl = ParticipantContextImpl;\nclass ParticipantInstance {\n  constructor(_version, payload, accountSid, conferenceSid, callSid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.callSid = payload.call_sid;\n    this.label = payload.label;\n    this.callSidToCoach = payload.call_sid_to_coach;\n    this.coaching = payload.coaching;\n    this.conferenceSid = payload.conference_sid;\n    this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);\n    this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated);\n    this.endConferenceOnExit = payload.end_conference_on_exit;\n    this.muted = payload.muted;\n    this.hold = payload.hold;\n    this.startConferenceOnEnter = payload.start_conference_on_enter;\n    this.status = payload.status;\n    this.queueTime = payload.queue_time;\n    this.uri = payload.uri;\n    this._solution = {\n      accountSid,\n      conferenceSid,\n      callSid: callSid || this.callSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new ParticipantContextImpl(this._version, this._solution.accountSid, this._solution.conferenceSid, this._solution.callSid);\n    return this._context;\n  }\n  /**\n   * Remove a ParticipantInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a ParticipantInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed ParticipantInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      callSid: this.callSid,\n      label: this.label,\n      callSidToCoach: this.callSidToCoach,\n      coaching: this.coaching,\n      conferenceSid: this.conferenceSid,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      endConferenceOnExit: this.endConferenceOnExit,\n      muted: this.muted,\n      hold: this.hold,\n      startConferenceOnEnter: this.startConferenceOnEnter,\n      status: this.status,\n      queueTime: this.queueTime,\n      uri: this.uri\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ParticipantInstance = ParticipantInstance;\nfunction ParticipantListInstance(version, accountSid, conferenceSid) {\n  if (!(0, utility_1.isValidPathParam)(accountSid)) {\n    throw new Error(\"Parameter 'accountSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(conferenceSid)) {\n    throw new Error(\"Parameter 'conferenceSid' is not valid.\");\n  }\n  const instance = callSid => instance.get(callSid);\n  instance.get = function get(callSid) {\n    return new ParticipantContextImpl(version, accountSid, conferenceSid, callSid);\n  };\n  instance._version = version;\n  instance._solution = {\n    accountSid,\n    conferenceSid\n  };\n  instance._uri = `/Accounts/${accountSid}/Conferences/${conferenceSid}/Participants.json`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"from\"] === null || params[\"from\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['from']\\\" missing.\");\n    }\n    if (params[\"to\"] === null || params[\"to\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['to']\\\" missing.\");\n    }\n    let data = {};\n    data[\"From\"] = params[\"from\"];\n    data[\"To\"] = params[\"to\"];\n    if (params[\"statusCallback\"] !== undefined) data[\"StatusCallback\"] = params[\"statusCallback\"];\n    if (params[\"statusCallbackMethod\"] !== undefined) data[\"StatusCallbackMethod\"] = params[\"statusCallbackMethod\"];\n    if (params[\"statusCallbackEvent\"] !== undefined) data[\"StatusCallbackEvent\"] = serialize.map(params[\"statusCallbackEvent\"], e => e);\n    if (params[\"label\"] !== undefined) data[\"Label\"] = params[\"label\"];\n    if (params[\"timeout\"] !== undefined) data[\"Timeout\"] = params[\"timeout\"];\n    if (params[\"record\"] !== undefined) data[\"Record\"] = serialize.bool(params[\"record\"]);\n    if (params[\"muted\"] !== undefined) data[\"Muted\"] = serialize.bool(params[\"muted\"]);\n    if (params[\"beep\"] !== undefined) data[\"Beep\"] = params[\"beep\"];\n    if (params[\"startConferenceOnEnter\"] !== undefined) data[\"StartConferenceOnEnter\"] = serialize.bool(params[\"startConferenceOnEnter\"]);\n    if (params[\"endConferenceOnExit\"] !== undefined) data[\"EndConferenceOnExit\"] = serialize.bool(params[\"endConferenceOnExit\"]);\n    if (params[\"waitUrl\"] !== undefined) data[\"WaitUrl\"] = params[\"waitUrl\"];\n    if (params[\"waitMethod\"] !== undefined) data[\"WaitMethod\"] = params[\"waitMethod\"];\n    if (params[\"earlyMedia\"] !== undefined) data[\"EarlyMedia\"] = serialize.bool(params[\"earlyMedia\"]);\n    if (params[\"maxParticipants\"] !== undefined) data[\"MaxParticipants\"] = params[\"maxParticipants\"];\n    if (params[\"conferenceRecord\"] !== undefined) data[\"ConferenceRecord\"] = params[\"conferenceRecord\"];\n    if (params[\"conferenceTrim\"] !== undefined) data[\"ConferenceTrim\"] = params[\"conferenceTrim\"];\n    if (params[\"conferenceStatusCallback\"] !== undefined) data[\"ConferenceStatusCallback\"] = params[\"conferenceStatusCallback\"];\n    if (params[\"conferenceStatusCallbackMethod\"] !== undefined) data[\"ConferenceStatusCallbackMethod\"] = params[\"conferenceStatusCallbackMethod\"];\n    if (params[\"conferenceStatusCallbackEvent\"] !== undefined) data[\"ConferenceStatusCallbackEvent\"] = serialize.map(params[\"conferenceStatusCallbackEvent\"], e => e);\n    if (params[\"recordingChannels\"] !== undefined) data[\"RecordingChannels\"] = params[\"recordingChannels\"];\n    if (params[\"recordingStatusCallback\"] !== undefined) data[\"RecordingStatusCallback\"] = params[\"recordingStatusCallback\"];\n    if (params[\"recordingStatusCallbackMethod\"] !== undefined) data[\"RecordingStatusCallbackMethod\"] = params[\"recordingStatusCallbackMethod\"];\n    if (params[\"sipAuthUsername\"] !== undefined) data[\"SipAuthUsername\"] = params[\"sipAuthUsername\"];\n    if (params[\"sipAuthPassword\"] !== undefined) data[\"SipAuthPassword\"] = params[\"sipAuthPassword\"];\n    if (params[\"region\"] !== undefined) data[\"Region\"] = params[\"region\"];\n    if (params[\"conferenceRecordingStatusCallback\"] !== undefined) data[\"ConferenceRecordingStatusCallback\"] = params[\"conferenceRecordingStatusCallback\"];\n    if (params[\"conferenceRecordingStatusCallbackMethod\"] !== undefined) data[\"ConferenceRecordingStatusCallbackMethod\"] = params[\"conferenceRecordingStatusCallbackMethod\"];\n    if (params[\"recordingStatusCallbackEvent\"] !== undefined) data[\"RecordingStatusCallbackEvent\"] = serialize.map(params[\"recordingStatusCallbackEvent\"], e => e);\n    if (params[\"conferenceRecordingStatusCallbackEvent\"] !== undefined) data[\"ConferenceRecordingStatusCallbackEvent\"] = serialize.map(params[\"conferenceRecordingStatusCallbackEvent\"], e => e);\n    if (params[\"coaching\"] !== undefined) data[\"Coaching\"] = serialize.bool(params[\"coaching\"]);\n    if (params[\"callSidToCoach\"] !== undefined) data[\"CallSidToCoach\"] = params[\"callSidToCoach\"];\n    if (params[\"jitterBufferSize\"] !== undefined) data[\"JitterBufferSize\"] = params[\"jitterBufferSize\"];\n    if (params[\"byoc\"] !== undefined) data[\"Byoc\"] = params[\"byoc\"];\n    if (params[\"callerId\"] !== undefined) data[\"CallerId\"] = params[\"callerId\"];\n    if (params[\"callReason\"] !== undefined) data[\"CallReason\"] = params[\"callReason\"];\n    if (params[\"recordingTrack\"] !== undefined) data[\"RecordingTrack\"] = params[\"recordingTrack\"];\n    if (params[\"timeLimit\"] !== undefined) data[\"TimeLimit\"] = params[\"timeLimit\"];\n    if (params[\"machineDetection\"] !== undefined) data[\"MachineDetection\"] = params[\"machineDetection\"];\n    if (params[\"machineDetectionTimeout\"] !== undefined) data[\"MachineDetectionTimeout\"] = params[\"machineDetectionTimeout\"];\n    if (params[\"machineDetectionSpeechThreshold\"] !== undefined) data[\"MachineDetectionSpeechThreshold\"] = params[\"machineDetectionSpeechThreshold\"];\n    if (params[\"machineDetectionSpeechEndThreshold\"] !== undefined) data[\"MachineDetectionSpeechEndThreshold\"] = params[\"machineDetectionSpeechEndThreshold\"];\n    if (params[\"machineDetectionSilenceTimeout\"] !== undefined) data[\"MachineDetectionSilenceTimeout\"] = params[\"machineDetectionSilenceTimeout\"];\n    if (params[\"amdStatusCallback\"] !== undefined) data[\"AmdStatusCallback\"] = params[\"amdStatusCallback\"];\n    if (params[\"amdStatusCallbackMethod\"] !== undefined) data[\"AmdStatusCallbackMethod\"] = params[\"amdStatusCallbackMethod\"];\n    if (params[\"trim\"] !== undefined) data[\"Trim\"] = params[\"trim\"];\n    if (params[\"callToken\"] !== undefined) data[\"CallToken\"] = params[\"callToken\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ParticipantInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.conferenceSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"muted\"] !== undefined) data[\"Muted\"] = serialize.bool(params[\"muted\"]);\n    if (params[\"hold\"] !== undefined) data[\"Hold\"] = serialize.bool(params[\"hold\"]);\n    if (params[\"coaching\"] !== undefined) data[\"Coaching\"] = serialize.bool(params[\"coaching\"]);\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ParticipantPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new ParticipantPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.ParticipantListInstance = ParticipantListInstance;\nclass ParticipantPage extends Page_1.default {\n  /**\n   * Initialize the ParticipantPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of ParticipantInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new ParticipantInstance(this._version, payload, this._solution.accountSid, this._solution.conferenceSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ParticipantPage = ParticipantPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ParticipantPage","ParticipantListInstance","ParticipantInstance","ParticipantContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","constructor","_version","accountSid","conferenceSid","callSid","isValidPathParam","Error","_solution","_uri","remove","callback","headers","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","update","params","Function","data","undefined","bool","toJSON","inspect","custom","_depth","options","account_sid","call_sid","label","callSidToCoach","call_sid_to_coach","coaching","conference_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","endConferenceOnExit","end_conference_on_exit","muted","hold","startConferenceOnEnter","start_conference_on_enter","status","queueTime","queue_time","_proxy","_context","version","get","create","map","e","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["D:/agri-community/client/node_modules/twilio/lib/rest/api/v2010/account/conference/participant.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Api\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParticipantPage = exports.ParticipantListInstance = exports.ParticipantInstance = exports.ParticipantContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass ParticipantContextImpl {\n    constructor(_version, accountSid, conferenceSid, callSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(accountSid)) {\n            throw new Error(\"Parameter 'accountSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(conferenceSid)) {\n            throw new Error(\"Parameter 'conferenceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(callSid)) {\n            throw new Error(\"Parameter 'callSid' is not valid.\");\n        }\n        this._solution = { accountSid, conferenceSid, callSid };\n        this._uri = `/Accounts/${accountSid}/Conferences/${conferenceSid}/Participants/${callSid}.json`;\n    }\n    remove(callback) {\n        const headers = {};\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n            headers,\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ParticipantInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.conferenceSid, instance._solution.callSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"muted\"] !== undefined)\n            data[\"Muted\"] = serialize.bool(params[\"muted\"]);\n        if (params[\"hold\"] !== undefined)\n            data[\"Hold\"] = serialize.bool(params[\"hold\"]);\n        if (params[\"holdUrl\"] !== undefined)\n            data[\"HoldUrl\"] = params[\"holdUrl\"];\n        if (params[\"holdMethod\"] !== undefined)\n            data[\"HoldMethod\"] = params[\"holdMethod\"];\n        if (params[\"announceUrl\"] !== undefined)\n            data[\"AnnounceUrl\"] = params[\"announceUrl\"];\n        if (params[\"announceMethod\"] !== undefined)\n            data[\"AnnounceMethod\"] = params[\"announceMethod\"];\n        if (params[\"waitUrl\"] !== undefined)\n            data[\"WaitUrl\"] = params[\"waitUrl\"];\n        if (params[\"waitMethod\"] !== undefined)\n            data[\"WaitMethod\"] = params[\"waitMethod\"];\n        if (params[\"beepOnExit\"] !== undefined)\n            data[\"BeepOnExit\"] = serialize.bool(params[\"beepOnExit\"]);\n        if (params[\"endConferenceOnExit\"] !== undefined)\n            data[\"EndConferenceOnExit\"] = serialize.bool(params[\"endConferenceOnExit\"]);\n        if (params[\"coaching\"] !== undefined)\n            data[\"Coaching\"] = serialize.bool(params[\"coaching\"]);\n        if (params[\"callSidToCoach\"] !== undefined)\n            data[\"CallSidToCoach\"] = params[\"callSidToCoach\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ParticipantInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.conferenceSid, instance._solution.callSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ParticipantContextImpl = ParticipantContextImpl;\nclass ParticipantInstance {\n    constructor(_version, payload, accountSid, conferenceSid, callSid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.callSid = payload.call_sid;\n        this.label = payload.label;\n        this.callSidToCoach = payload.call_sid_to_coach;\n        this.coaching = payload.coaching;\n        this.conferenceSid = payload.conference_sid;\n        this.dateCreated = deserialize.rfc2822DateTime(payload.date_created);\n        this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated);\n        this.endConferenceOnExit = payload.end_conference_on_exit;\n        this.muted = payload.muted;\n        this.hold = payload.hold;\n        this.startConferenceOnEnter = payload.start_conference_on_enter;\n        this.status = payload.status;\n        this.queueTime = payload.queue_time;\n        this.uri = payload.uri;\n        this._solution = {\n            accountSid,\n            conferenceSid,\n            callSid: callSid || this.callSid,\n        };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new ParticipantContextImpl(this._version, this._solution.accountSid, this._solution.conferenceSid, this._solution.callSid);\n        return this._context;\n    }\n    /**\n     * Remove a ParticipantInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a ParticipantInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed ParticipantInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            callSid: this.callSid,\n            label: this.label,\n            callSidToCoach: this.callSidToCoach,\n            coaching: this.coaching,\n            conferenceSid: this.conferenceSid,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            endConferenceOnExit: this.endConferenceOnExit,\n            muted: this.muted,\n            hold: this.hold,\n            startConferenceOnEnter: this.startConferenceOnEnter,\n            status: this.status,\n            queueTime: this.queueTime,\n            uri: this.uri,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ParticipantInstance = ParticipantInstance;\nfunction ParticipantListInstance(version, accountSid, conferenceSid) {\n    if (!(0, utility_1.isValidPathParam)(accountSid)) {\n        throw new Error(\"Parameter 'accountSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(conferenceSid)) {\n        throw new Error(\"Parameter 'conferenceSid' is not valid.\");\n    }\n    const instance = ((callSid) => instance.get(callSid));\n    instance.get = function get(callSid) {\n        return new ParticipantContextImpl(version, accountSid, conferenceSid, callSid);\n    };\n    instance._version = version;\n    instance._solution = { accountSid, conferenceSid };\n    instance._uri = `/Accounts/${accountSid}/Conferences/${conferenceSid}/Participants.json`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"from\"] === null || params[\"from\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['from']\\\" missing.\");\n        }\n        if (params[\"to\"] === null || params[\"to\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['to']\\\" missing.\");\n        }\n        let data = {};\n        data[\"From\"] = params[\"from\"];\n        data[\"To\"] = params[\"to\"];\n        if (params[\"statusCallback\"] !== undefined)\n            data[\"StatusCallback\"] = params[\"statusCallback\"];\n        if (params[\"statusCallbackMethod\"] !== undefined)\n            data[\"StatusCallbackMethod\"] = params[\"statusCallbackMethod\"];\n        if (params[\"statusCallbackEvent\"] !== undefined)\n            data[\"StatusCallbackEvent\"] = serialize.map(params[\"statusCallbackEvent\"], (e) => e);\n        if (params[\"label\"] !== undefined)\n            data[\"Label\"] = params[\"label\"];\n        if (params[\"timeout\"] !== undefined)\n            data[\"Timeout\"] = params[\"timeout\"];\n        if (params[\"record\"] !== undefined)\n            data[\"Record\"] = serialize.bool(params[\"record\"]);\n        if (params[\"muted\"] !== undefined)\n            data[\"Muted\"] = serialize.bool(params[\"muted\"]);\n        if (params[\"beep\"] !== undefined)\n            data[\"Beep\"] = params[\"beep\"];\n        if (params[\"startConferenceOnEnter\"] !== undefined)\n            data[\"StartConferenceOnEnter\"] = serialize.bool(params[\"startConferenceOnEnter\"]);\n        if (params[\"endConferenceOnExit\"] !== undefined)\n            data[\"EndConferenceOnExit\"] = serialize.bool(params[\"endConferenceOnExit\"]);\n        if (params[\"waitUrl\"] !== undefined)\n            data[\"WaitUrl\"] = params[\"waitUrl\"];\n        if (params[\"waitMethod\"] !== undefined)\n            data[\"WaitMethod\"] = params[\"waitMethod\"];\n        if (params[\"earlyMedia\"] !== undefined)\n            data[\"EarlyMedia\"] = serialize.bool(params[\"earlyMedia\"]);\n        if (params[\"maxParticipants\"] !== undefined)\n            data[\"MaxParticipants\"] = params[\"maxParticipants\"];\n        if (params[\"conferenceRecord\"] !== undefined)\n            data[\"ConferenceRecord\"] = params[\"conferenceRecord\"];\n        if (params[\"conferenceTrim\"] !== undefined)\n            data[\"ConferenceTrim\"] = params[\"conferenceTrim\"];\n        if (params[\"conferenceStatusCallback\"] !== undefined)\n            data[\"ConferenceStatusCallback\"] = params[\"conferenceStatusCallback\"];\n        if (params[\"conferenceStatusCallbackMethod\"] !== undefined)\n            data[\"ConferenceStatusCallbackMethod\"] =\n                params[\"conferenceStatusCallbackMethod\"];\n        if (params[\"conferenceStatusCallbackEvent\"] !== undefined)\n            data[\"ConferenceStatusCallbackEvent\"] = serialize.map(params[\"conferenceStatusCallbackEvent\"], (e) => e);\n        if (params[\"recordingChannels\"] !== undefined)\n            data[\"RecordingChannels\"] = params[\"recordingChannels\"];\n        if (params[\"recordingStatusCallback\"] !== undefined)\n            data[\"RecordingStatusCallback\"] = params[\"recordingStatusCallback\"];\n        if (params[\"recordingStatusCallbackMethod\"] !== undefined)\n            data[\"RecordingStatusCallbackMethod\"] =\n                params[\"recordingStatusCallbackMethod\"];\n        if (params[\"sipAuthUsername\"] !== undefined)\n            data[\"SipAuthUsername\"] = params[\"sipAuthUsername\"];\n        if (params[\"sipAuthPassword\"] !== undefined)\n            data[\"SipAuthPassword\"] = params[\"sipAuthPassword\"];\n        if (params[\"region\"] !== undefined)\n            data[\"Region\"] = params[\"region\"];\n        if (params[\"conferenceRecordingStatusCallback\"] !== undefined)\n            data[\"ConferenceRecordingStatusCallback\"] =\n                params[\"conferenceRecordingStatusCallback\"];\n        if (params[\"conferenceRecordingStatusCallbackMethod\"] !== undefined)\n            data[\"ConferenceRecordingStatusCallbackMethod\"] =\n                params[\"conferenceRecordingStatusCallbackMethod\"];\n        if (params[\"recordingStatusCallbackEvent\"] !== undefined)\n            data[\"RecordingStatusCallbackEvent\"] = serialize.map(params[\"recordingStatusCallbackEvent\"], (e) => e);\n        if (params[\"conferenceRecordingStatusCallbackEvent\"] !== undefined)\n            data[\"ConferenceRecordingStatusCallbackEvent\"] = serialize.map(params[\"conferenceRecordingStatusCallbackEvent\"], (e) => e);\n        if (params[\"coaching\"] !== undefined)\n            data[\"Coaching\"] = serialize.bool(params[\"coaching\"]);\n        if (params[\"callSidToCoach\"] !== undefined)\n            data[\"CallSidToCoach\"] = params[\"callSidToCoach\"];\n        if (params[\"jitterBufferSize\"] !== undefined)\n            data[\"JitterBufferSize\"] = params[\"jitterBufferSize\"];\n        if (params[\"byoc\"] !== undefined)\n            data[\"Byoc\"] = params[\"byoc\"];\n        if (params[\"callerId\"] !== undefined)\n            data[\"CallerId\"] = params[\"callerId\"];\n        if (params[\"callReason\"] !== undefined)\n            data[\"CallReason\"] = params[\"callReason\"];\n        if (params[\"recordingTrack\"] !== undefined)\n            data[\"RecordingTrack\"] = params[\"recordingTrack\"];\n        if (params[\"timeLimit\"] !== undefined)\n            data[\"TimeLimit\"] = params[\"timeLimit\"];\n        if (params[\"machineDetection\"] !== undefined)\n            data[\"MachineDetection\"] = params[\"machineDetection\"];\n        if (params[\"machineDetectionTimeout\"] !== undefined)\n            data[\"MachineDetectionTimeout\"] = params[\"machineDetectionTimeout\"];\n        if (params[\"machineDetectionSpeechThreshold\"] !== undefined)\n            data[\"MachineDetectionSpeechThreshold\"] =\n                params[\"machineDetectionSpeechThreshold\"];\n        if (params[\"machineDetectionSpeechEndThreshold\"] !== undefined)\n            data[\"MachineDetectionSpeechEndThreshold\"] =\n                params[\"machineDetectionSpeechEndThreshold\"];\n        if (params[\"machineDetectionSilenceTimeout\"] !== undefined)\n            data[\"MachineDetectionSilenceTimeout\"] =\n                params[\"machineDetectionSilenceTimeout\"];\n        if (params[\"amdStatusCallback\"] !== undefined)\n            data[\"AmdStatusCallback\"] = params[\"amdStatusCallback\"];\n        if (params[\"amdStatusCallbackMethod\"] !== undefined)\n            data[\"AmdStatusCallbackMethod\"] = params[\"amdStatusCallbackMethod\"];\n        if (params[\"trim\"] !== undefined)\n            data[\"Trim\"] = params[\"trim\"];\n        if (params[\"callToken\"] !== undefined)\n            data[\"CallToken\"] = params[\"callToken\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ParticipantInstance(operationVersion, payload, instance._solution.accountSid, instance._solution.conferenceSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"muted\"] !== undefined)\n            data[\"Muted\"] = serialize.bool(params[\"muted\"]);\n        if (params[\"hold\"] !== undefined)\n            data[\"Hold\"] = serialize.bool(params[\"hold\"]);\n        if (params[\"coaching\"] !== undefined)\n            data[\"Coaching\"] = serialize.bool(params[\"coaching\"]);\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ParticipantPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new ParticipantPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.ParticipantListInstance = ParticipantListInstance;\nclass ParticipantPage extends Page_1.default {\n    /**\n     * Initialize the ParticipantPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of ParticipantInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new ParticipantInstance(this._version, payload, this._solution.accountSid, this._solution.conferenceSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ParticipantPage = ParticipantPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}