{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Numbers\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BulkEligibilityListInstance = exports.BulkEligibilityInstance = exports.BulkEligibilityContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass BulkEligibilityContextImpl {\n  constructor(_version, requestId) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(requestId)) {\n      throw new Error(\"Parameter 'requestId' is not valid.\");\n    }\n    this._solution = {\n      requestId\n    };\n    this._uri = `/HostedNumber/Eligibility/Bulk/${requestId}`;\n  }\n  fetch(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new BulkEligibilityInstance(operationVersion, payload, instance._solution.requestId));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.BulkEligibilityContextImpl = BulkEligibilityContextImpl;\nclass BulkEligibilityInstance {\n  constructor(_version, payload, requestId) {\n    this._version = _version;\n    this.requestId = payload.request_id;\n    this.url = payload.url;\n    this.results = payload.results;\n    this.friendlyName = payload.friendly_name;\n    this.status = payload.status;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateCompleted = deserialize.iso8601DateTime(payload.date_completed);\n    this._solution = {\n      requestId: requestId || this.requestId\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new BulkEligibilityContextImpl(this._version, this._solution.requestId);\n    return this._context;\n  }\n  /**\n   * Fetch a BulkEligibilityInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed BulkEligibilityInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      requestId: this.requestId,\n      url: this.url,\n      results: this.results,\n      friendlyName: this.friendlyName,\n      status: this.status,\n      dateCreated: this.dateCreated,\n      dateCompleted: this.dateCompleted\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.BulkEligibilityInstance = BulkEligibilityInstance;\nfunction BulkEligibilityListInstance(version) {\n  const instance = requestId => instance.get(requestId);\n  instance.get = function get(requestId) {\n    return new BulkEligibilityContextImpl(version, requestId);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/HostedNumber/Eligibility/Bulk`;\n  instance.create = function create(params, headers, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    data = params;\n    if (headers === null || headers === undefined) {\n      headers = {};\n    }\n    headers[\"Content-Type\"] = \"application/json\";\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new BulkEligibilityInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.BulkEligibilityListInstance = BulkEligibilityListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","BulkEligibilityListInstance","BulkEligibilityInstance","BulkEligibilityContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","requestId","isValidPathParam","Error","_solution","_uri","fetch","callback","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","request_id","url","results","friendlyName","friendly_name","status","dateCreated","iso8601DateTime","date_created","dateCompleted","date_completed","_proxy","_context","version","get","create","params","Function","data","undefined","inspectImpl"],"sources":["D:/agri-community/client/node_modules/twilio/lib/rest/numbers/v1/bulkEligibility.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Numbers\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkEligibilityListInstance = exports.BulkEligibilityInstance = exports.BulkEligibilityContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nclass BulkEligibilityContextImpl {\n    constructor(_version, requestId) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(requestId)) {\n            throw new Error(\"Parameter 'requestId' is not valid.\");\n        }\n        this._solution = { requestId };\n        this._uri = `/HostedNumber/Eligibility/Bulk/${requestId}`;\n    }\n    fetch(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new BulkEligibilityInstance(operationVersion, payload, instance._solution.requestId));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.BulkEligibilityContextImpl = BulkEligibilityContextImpl;\nclass BulkEligibilityInstance {\n    constructor(_version, payload, requestId) {\n        this._version = _version;\n        this.requestId = payload.request_id;\n        this.url = payload.url;\n        this.results = payload.results;\n        this.friendlyName = payload.friendly_name;\n        this.status = payload.status;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateCompleted = deserialize.iso8601DateTime(payload.date_completed);\n        this._solution = { requestId: requestId || this.requestId };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new BulkEligibilityContextImpl(this._version, this._solution.requestId);\n        return this._context;\n    }\n    /**\n     * Fetch a BulkEligibilityInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed BulkEligibilityInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            requestId: this.requestId,\n            url: this.url,\n            results: this.results,\n            friendlyName: this.friendlyName,\n            status: this.status,\n            dateCreated: this.dateCreated,\n            dateCompleted: this.dateCompleted,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.BulkEligibilityInstance = BulkEligibilityInstance;\nfunction BulkEligibilityListInstance(version) {\n    const instance = ((requestId) => instance.get(requestId));\n    instance.get = function get(requestId) {\n        return new BulkEligibilityContextImpl(version, requestId);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/HostedNumber/Eligibility/Bulk`;\n    instance.create = function create(params, headers, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        data = params;\n        if (headers === null || headers === undefined) {\n            headers = {};\n        }\n        headers[\"Content-Type\"] = \"application/json\";\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new BulkEligibilityInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.BulkEligibilityListInstance = BulkEligibilityListInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}