{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Microvisor\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppManifestListInstance = exports.AppManifestInstance = exports.AppManifestContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass AppManifestContextImpl {\n  constructor(_version, appSid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(appSid)) {\n      throw new Error(\"Parameter 'appSid' is not valid.\");\n    }\n    this._solution = {\n      appSid\n    };\n    this._uri = `/Apps/${appSid}/Manifest`;\n  }\n  fetch(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new AppManifestInstance(operationVersion, payload, instance._solution.appSid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AppManifestContextImpl = AppManifestContextImpl;\nclass AppManifestInstance {\n  constructor(_version, payload, appSid) {\n    this._version = _version;\n    this.appSid = payload.app_sid;\n    this.hash = payload.hash;\n    this.encodedBytes = payload.encoded_bytes;\n    this.url = payload.url;\n    this._solution = {\n      appSid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new AppManifestContextImpl(this._version, this._solution.appSid);\n    return this._context;\n  }\n  /**\n   * Fetch a AppManifestInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed AppManifestInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      appSid: this.appSid,\n      hash: this.hash,\n      encodedBytes: this.encodedBytes,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AppManifestInstance = AppManifestInstance;\nfunction AppManifestListInstance(version, appSid) {\n  if (!(0, utility_1.isValidPathParam)(appSid)) {\n    throw new Error(\"Parameter 'appSid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new AppManifestContextImpl(version, appSid);\n  };\n  instance._version = version;\n  instance._solution = {\n    appSid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.AppManifestListInstance = AppManifestListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","AppManifestListInstance","AppManifestInstance","AppManifestContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","appSid","isValidPathParam","Error","_solution","_uri","fetch","callback","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","app_sid","hash","encodedBytes","encoded_bytes","url","_proxy","_context","version","get","inspectImpl"],"sources":["D:/agri-community/client/node_modules/twilio/lib/rest/microvisor/v1/app/appManifest.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Microvisor\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppManifestListInstance = exports.AppManifestInstance = exports.AppManifestContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../base/deserialize\");\nconst serialize = require(\"../../../../base/serialize\");\nconst utility_1 = require(\"../../../../base/utility\");\nclass AppManifestContextImpl {\n    constructor(_version, appSid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(appSid)) {\n            throw new Error(\"Parameter 'appSid' is not valid.\");\n        }\n        this._solution = { appSid };\n        this._uri = `/Apps/${appSid}/Manifest`;\n    }\n    fetch(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new AppManifestInstance(operationVersion, payload, instance._solution.appSid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AppManifestContextImpl = AppManifestContextImpl;\nclass AppManifestInstance {\n    constructor(_version, payload, appSid) {\n        this._version = _version;\n        this.appSid = payload.app_sid;\n        this.hash = payload.hash;\n        this.encodedBytes = payload.encoded_bytes;\n        this.url = payload.url;\n        this._solution = { appSid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new AppManifestContextImpl(this._version, this._solution.appSid);\n        return this._context;\n    }\n    /**\n     * Fetch a AppManifestInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed AppManifestInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            appSid: this.appSid,\n            hash: this.hash,\n            encodedBytes: this.encodedBytes,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AppManifestInstance = AppManifestInstance;\nfunction AppManifestListInstance(version, appSid) {\n    if (!(0, utility_1.isValidPathParam)(appSid)) {\n        throw new Error(\"Parameter 'appSid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new AppManifestContextImpl(version, appSid);\n    };\n    instance._version = version;\n    instance._solution = { appSid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.AppManifestListInstance = AppManifestListInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}