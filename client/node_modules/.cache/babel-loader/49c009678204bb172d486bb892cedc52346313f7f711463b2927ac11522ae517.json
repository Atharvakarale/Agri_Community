{"ast":null,"code":"var _jsxFileName = \"D:\\\\agri-community\\\\client\\\\src\\\\store\\\\auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// // auth.js\n// import { createContext, useContext, useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";  // Correct usage of useNavigate\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const navigate = useNavigate();  // useNavigate works here because it's within Router context\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     if (token) {\n//       setUser({ token });\n//     }\n//   }, []);\n\n//   const login = (token) => {\n//     localStorage.setItem(\"token\", token);\n//     setUser({ token });\n//     navigate(\"/\");  // Use navigate to redirect after login\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem(\"token\");\n//     setUser(null);\n//     navigate(\"/login\");  // Use navigate to redirect after logout\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export const useAuth = () => useContext(AuthContext);\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setUser({\n        token\n      });\n    }\n  }, []);\n  const login = token => {\n    var _location$state, _location$state$from;\n    localStorage.setItem(\"token\", token);\n    setUser({\n      token\n    });\n\n    // Redirect to the last visited page or home\n    const redirectTo = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\";\n    navigate(redirectTo, {\n      replace: true\n    });\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    navigate(\"/login\", {\n      replace: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"UwFYhF/JaZayQmrGtzvBjqJ0PGs=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","location","token","localStorage","getItem","login","_location$state","_location$state$from","setItem","redirectTo","state","from","pathname","replace","logout","removeItem","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/agri-community/client/src/store/auth.js"],"sourcesContent":["// // auth.js\r\n// import { createContext, useContext, useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";  // Correct usage of useNavigate\r\n\r\n// const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//   const [user, setUser] = useState(null);\r\n//   const navigate = useNavigate();  // useNavigate works here because it's within Router context\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"token\");\r\n//     if (token) {\r\n//       setUser({ token });\r\n//     }\r\n//   }, []);\r\n\r\n//   const login = (token) => {\r\n//     localStorage.setItem(\"token\", token);\r\n//     setUser({ token });\r\n//     navigate(\"/\");  // Use navigate to redirect after login\r\n//   };\r\n\r\n//   const logout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     setUser(null);\r\n//     navigate(\"/login\");  // Use navigate to redirect after logout\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={{ user, login, logout }}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useAuth = () => useContext(AuthContext);\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      setUser({ token });\r\n    }\r\n  }, []);\r\n\r\n  const login = (token) => {\r\n    localStorage.setItem(\"token\", token);\r\n    setUser({ token });\r\n\r\n    // Redirect to the last visited page or home\r\n    const redirectTo = location.state?.from?.pathname || \"/\";\r\n    navigate(redirectTo, { replace: true });\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n    navigate(\"/login\", { replace: true });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, isAuthenticated: !!user }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTH,OAAO,CAAC;QAAEG;MAAM,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAIH,KAAK,IAAK;IAAA,IAAAI,eAAA,EAAAC,oBAAA;IACvBJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;IACpCH,OAAO,CAAC;MAAEG;IAAM,CAAC,CAAC;;IAElB;IACA,MAAMO,UAAU,GAAG,EAAAH,eAAA,GAAAL,QAAQ,CAACS,KAAK,cAAAJ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBK,IAAI,cAAAJ,oBAAA,uBAApBA,oBAAA,CAAsBK,QAAQ,KAAI,GAAG;IACxDZ,QAAQ,CAACS,UAAU,EAAE;MAAEI,OAAO,EAAE;IAAK,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChChB,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,QAAQ,EAAE;MAAEa,OAAO,EAAE;IAAK,CAAC,CAAC;EACvC,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,IAAI;MAAEO,KAAK;MAAES,MAAM;MAAEI,eAAe,EAAE,CAAC,CAACpB;IAAK,CAAE;IAAAF,QAAA,EAC3EA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CAhCWF,YAAY;EAAA,QAENJ,WAAW,EACXD,WAAW;AAAA;AAAAiC,EAAA,GAHjB5B,YAAY;AAkCzB,OAAO,MAAM6B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACO,WAAW,CAAC;AAAA;AAAC+B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}