{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Chat\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserBindingPage = exports.UserBindingListInstance = exports.UserBindingInstance = exports.UserBindingContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass UserBindingContextImpl {\n  constructor(_version, serviceSid, userSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n      throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(userSid)) {\n      throw new Error(\"Parameter 'userSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      serviceSid,\n      userSid,\n      sid\n    };\n    this._uri = `/Services/${serviceSid}/Users/${userSid}/Bindings/${sid}`;\n  }\n  remove(callback) {\n    const headers = {};\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.remove({\n        uri: instance._uri,\n        method: \"delete\",\n        headers\n      });\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  fetch(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new UserBindingInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.userSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UserBindingContextImpl = UserBindingContextImpl;\nclass UserBindingInstance {\n  constructor(_version, payload, serviceSid, userSid, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.serviceSid = payload.service_sid;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.endpoint = payload.endpoint;\n    this.identity = payload.identity;\n    this.userSid = payload.user_sid;\n    this.credentialSid = payload.credential_sid;\n    this.bindingType = payload.binding_type;\n    this.messageTypes = payload.message_types;\n    this.url = payload.url;\n    this._solution = {\n      serviceSid,\n      userSid,\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new UserBindingContextImpl(this._version, this._solution.serviceSid, this._solution.userSid, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Remove a UserBindingInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed boolean\n   */\n  remove(callback) {\n    return this._proxy.remove(callback);\n  }\n  /**\n   * Fetch a UserBindingInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed UserBindingInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      serviceSid: this.serviceSid,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      endpoint: this.endpoint,\n      identity: this.identity,\n      userSid: this.userSid,\n      credentialSid: this.credentialSid,\n      bindingType: this.bindingType,\n      messageTypes: this.messageTypes,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UserBindingInstance = UserBindingInstance;\nfunction UserBindingListInstance(version, serviceSid, userSid) {\n  if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n    throw new Error(\"Parameter 'serviceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(userSid)) {\n    throw new Error(\"Parameter 'userSid' is not valid.\");\n  }\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new UserBindingContextImpl(version, serviceSid, userSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    serviceSid,\n    userSid\n  };\n  instance._uri = `/Services/${serviceSid}/Users/${userSid}/Bindings`;\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"bindingType\"] !== undefined) data[\"BindingType\"] = serialize.map(params[\"bindingType\"], e => e);\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new UserBindingPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new UserBindingPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.UserBindingListInstance = UserBindingListInstance;\nclass UserBindingPage extends Page_1.default {\n  /**\n   * Initialize the UserBindingPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of UserBindingInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new UserBindingInstance(this._version, payload, this._solution.serviceSid, this._solution.userSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.UserBindingPage = UserBindingPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","UserBindingPage","UserBindingListInstance","UserBindingInstance","UserBindingContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","constructor","_version","serviceSid","userSid","sid","isValidPathParam","Error","_solution","_uri","remove","callback","headers","instance","operationVersion","operationPromise","uri","method","setPromiseCallback","fetch","then","payload","toJSON","inspect","custom","_depth","options","accountSid","account_sid","service_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","endpoint","identity","user_sid","credentialSid","credential_sid","bindingType","binding_type","messageTypes","message_types","url","_proxy","_context","version","get","page","params","Function","data","undefined","map","e","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["D:/agri-community/client/node_modules/twilio/lib/rest/chat/v2/service/user/userBinding.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Chat\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserBindingPage = exports.UserBindingListInstance = exports.UserBindingInstance = exports.UserBindingContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass UserBindingContextImpl {\n    constructor(_version, serviceSid, userSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n            throw new Error(\"Parameter 'serviceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(userSid)) {\n            throw new Error(\"Parameter 'userSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { serviceSid, userSid, sid };\n        this._uri = `/Services/${serviceSid}/Users/${userSid}/Bindings/${sid}`;\n    }\n    remove(callback) {\n        const headers = {};\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.remove({\n            uri: instance._uri,\n            method: \"delete\",\n            headers,\n        });\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    fetch(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new UserBindingInstance(operationVersion, payload, instance._solution.serviceSid, instance._solution.userSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UserBindingContextImpl = UserBindingContextImpl;\nclass UserBindingInstance {\n    constructor(_version, payload, serviceSid, userSid, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.serviceSid = payload.service_sid;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.endpoint = payload.endpoint;\n        this.identity = payload.identity;\n        this.userSid = payload.user_sid;\n        this.credentialSid = payload.credential_sid;\n        this.bindingType = payload.binding_type;\n        this.messageTypes = payload.message_types;\n        this.url = payload.url;\n        this._solution = { serviceSid, userSid, sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new UserBindingContextImpl(this._version, this._solution.serviceSid, this._solution.userSid, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Remove a UserBindingInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed boolean\n     */\n    remove(callback) {\n        return this._proxy.remove(callback);\n    }\n    /**\n     * Fetch a UserBindingInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed UserBindingInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            serviceSid: this.serviceSid,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            endpoint: this.endpoint,\n            identity: this.identity,\n            userSid: this.userSid,\n            credentialSid: this.credentialSid,\n            bindingType: this.bindingType,\n            messageTypes: this.messageTypes,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UserBindingInstance = UserBindingInstance;\nfunction UserBindingListInstance(version, serviceSid, userSid) {\n    if (!(0, utility_1.isValidPathParam)(serviceSid)) {\n        throw new Error(\"Parameter 'serviceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(userSid)) {\n        throw new Error(\"Parameter 'userSid' is not valid.\");\n    }\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new UserBindingContextImpl(version, serviceSid, userSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { serviceSid, userSid };\n    instance._uri = `/Services/${serviceSid}/Users/${userSid}/Bindings`;\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"bindingType\"] !== undefined)\n            data[\"BindingType\"] = serialize.map(params[\"bindingType\"], (e) => e);\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new UserBindingPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new UserBindingPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.UserBindingListInstance = UserBindingListInstance;\nclass UserBindingPage extends Page_1.default {\n    /**\n     * Initialize the UserBindingPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of UserBindingInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new UserBindingInstance(this._version, payload, this._solution.serviceSid, this._solution.userSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.UserBindingPage = UserBindingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}