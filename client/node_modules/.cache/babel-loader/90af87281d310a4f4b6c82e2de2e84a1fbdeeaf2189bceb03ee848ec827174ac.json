{"ast":null,"code":"var _jsxFileName = \"D:\\\\agri-community\\\\client\\\\src\\\\components\\\\VideoCall.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { connect } from \"twilio\"; // Twilio's video package\nimport \"../styles/videoCall.css\"; // Your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = ({\n  roomId\n}) => {\n  _s();\n  const [room, setRoom] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [remoteParticipant, setRemoteParticipant] = useState(null);\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  useEffect(() => {\n    const connectToRoom = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/call/generate-token\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            roomName: roomId\n          })\n        });\n        const {\n          token\n        } = await response.json();\n        const room = await connect(token, {\n          name: roomId,\n          audio: true,\n          video: true\n        });\n        setRoom(room);\n        setIsConnected(true);\n        room.participants.forEach(participant => {\n          setRemoteParticipant(participant);\n          participant.tracks.forEach(track => {\n            if (track.kind === \"video\") {\n              remoteVideoRef.current.appendChild(track.attach());\n            }\n          });\n        });\n        room.on(\"participantConnected\", participant => {\n          setRemoteParticipant(participant);\n          participant.tracks.forEach(track => {\n            if (track.kind === \"video\") {\n              remoteVideoRef.current.appendChild(track.attach());\n            }\n          });\n        });\n        room.on(\"participantDisconnected\", () => {\n          setRemoteParticipant(null);\n        });\n        room.on(\"disconnected\", () => {\n          room.localParticipant.tracks.forEach(track => track.stop());\n          room.disconnect();\n        });\n\n        // Attach local video track\n        localVideoRef.current.srcObject = room.localParticipant.videoTracks[0].track.mediaStreamTrack;\n      } catch (error) {\n        console.error(\"Error connecting to room\", error);\n      }\n    };\n    connectToRoom();\n    return () => {\n      if (room) {\n        room.disconnect();\n      }\n    };\n  }, [roomId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-call-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Video Call with Seller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Seller's Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: remoteVideoRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Connecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"w8XXexJ2HWK3o2meUPPii1w8jt0=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","connect","jsxDEV","_jsxDEV","VideoCall","roomId","_s","room","setRoom","isConnected","setIsConnected","remoteParticipant","setRemoteParticipant","localVideoRef","remoteVideoRef","connectToRoom","response","fetch","method","headers","body","JSON","stringify","roomName","token","json","name","audio","video","participants","forEach","participant","tracks","track","kind","current","appendChild","attach","on","localParticipant","stop","disconnect","srcObject","videoTracks","mediaStreamTrack","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["D:/agri-community/client/src/components/VideoCall.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { connect } from \"twilio\"; // Twilio's video package\r\nimport \"../styles/videoCall.css\"; // Your CSS for styling\r\n\r\nconst VideoCall = ({ roomId }) => {\r\n  const [room, setRoom] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [remoteParticipant, setRemoteParticipant] = useState(null);\r\n\r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const connectToRoom = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/call/generate-token\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ roomName: roomId }),\r\n        });\r\n        const { token } = await response.json();\r\n\r\n        const room = await connect(token, {\r\n          name: roomId,\r\n          audio: true,\r\n          video: true,\r\n        });\r\n\r\n        setRoom(room);\r\n        setIsConnected(true);\r\n        room.participants.forEach((participant) => {\r\n          setRemoteParticipant(participant);\r\n          participant.tracks.forEach((track) => {\r\n            if (track.kind === \"video\") {\r\n              remoteVideoRef.current.appendChild(track.attach());\r\n            }\r\n          });\r\n        });\r\n\r\n        room.on(\"participantConnected\", (participant) => {\r\n          setRemoteParticipant(participant);\r\n          participant.tracks.forEach((track) => {\r\n            if (track.kind === \"video\") {\r\n              remoteVideoRef.current.appendChild(track.attach());\r\n            }\r\n          });\r\n        });\r\n\r\n        room.on(\"participantDisconnected\", () => {\r\n          setRemoteParticipant(null);\r\n        });\r\n\r\n        room.on(\"disconnected\", () => {\r\n          room.localParticipant.tracks.forEach((track) => track.stop());\r\n          room.disconnect();\r\n        });\r\n\r\n        // Attach local video track\r\n        localVideoRef.current.srcObject = room.localParticipant.videoTracks[0].track.mediaStreamTrack;\r\n      } catch (error) {\r\n        console.error(\"Error connecting to room\", error);\r\n      }\r\n    };\r\n\r\n    connectToRoom();\r\n\r\n    return () => {\r\n      if (room) {\r\n        room.disconnect();\r\n      }\r\n    };\r\n  }, [roomId]);\r\n\r\n  return (\r\n    <div className=\"video-call-container\">\r\n      <h2>Video Call with Seller</h2>\r\n      {isConnected ? (\r\n        <div>\r\n          <div>\r\n            <h3>Your Video</h3>\r\n            <video ref={localVideoRef} autoPlay muted></video>\r\n          </div>\r\n          <div>\r\n            <h3>Seller's Video</h3>\r\n            <div ref={remoteVideoRef}></div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>Connecting...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}