{"ast":null,"code":"// // auth.js\n// import { createContext, useContext, useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";  // Correct usage of useNavigate\n\n// const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const navigate = useNavigate();  // useNavigate works here because it's within Router context\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\");\n//     if (token) {\n//       setUser({ token });\n//     }\n//   }, []);\n\n//   const login = (token) => {\n//     localStorage.setItem(\"token\", token);\n//     setUser({ token });\n//     navigate(\"/\");  // Use navigate to redirect after login\n//   };\n\n//   const logout = () => {\n//     localStorage.removeItem(\"token\");\n//     setUser(null);\n//     navigate(\"/login\");  // Use navigate to redirect after logout\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export const useAuth = () => useContext(AuthContext);","map":{"version":3,"names":[],"sources":["D:/agri-community/client/src/store/auth.js"],"sourcesContent":["// // auth.js\r\n// import { createContext, useContext, useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";  // Correct usage of useNavigate\r\n\r\n// const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//   const [user, setUser] = useState(null);\r\n//   const navigate = useNavigate();  // useNavigate works here because it's within Router context\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"token\");\r\n//     if (token) {\r\n//       setUser({ token });\r\n//     }\r\n//   }, []);\r\n\r\n//   const login = (token) => {\r\n//     localStorage.setItem(\"token\", token);\r\n//     setUser({ token });\r\n//     navigate(\"/\");  // Use navigate to redirect after login\r\n//   };\r\n\r\n//   const logout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     setUser(null);\r\n//     navigate(\"/login\");  // Use navigate to redirect after logout\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={{ user, login, logout }}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}