{"ast":null,"code":"require(\"dotenv\").config();\nconst express = require(\"express\");\nconst cors = require(\"cors\");\nconst http = require(\"http\");\nconst path = require(\"path\");\nconst multer = require(\"multer\");\nconst {\n  Server\n} = require(\"socket.io\");\nconst connectDB = require(\"./config/db\");\n// Import Routes\nconst paymentRoutes = require(\"./routes/paymentRoutes\");\nconst authRoutes = require(\"./routes/authRoutes\");\nconst workerRoutes = require(\"./routes/workerRoutes\");\nconst equipmentRoutes = require(\"./routes/equipmentRoutes\");\nconst weatherRoutes = require(\"./routes/weatherRoutes\");\nconst marketplaceRoutes = require(\"./routes/marketplaceRoutes\");\nconst videoCallRoutes = require(\"./routes/videoCallRoutes\");\nconst chatbotRoutes = require(\"./routes/chatbotRoutes\"); // âœ… Added Chatbot Routes\n\nconst app = express();\nconst server = http.createServer(app);\nconnectDB();\n\n// âœ… Middleware\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\n\n// âœ… Enable CORS\napp.use(cors({\n  origin: [\"http://localhost:3000\", \"http://localhost:3001\"],\n  methods: [\"GET\", \"POST\"],\n  credentials: true\n}));\n\n// âœ… Use Routes\napp.use(\"/api/auth\", authRoutes);\napp.use(\"/api/workers\", workerRoutes);\napp.use(\"/api/equipment\", equipmentRoutes);\napp.use(\"/api/weather\", weatherRoutes);\napp.use(\"/api/marketplace\", marketplaceRoutes);\napp.use(\"/api/payment\", paymentRoutes);\napp.use(\"/api/video-call\", videoCallRoutes);\napp.use(\"/api/chatbot\", chatbotRoutes); // âœ… Chatbot API Integrated\n\n// âœ… Socket.io Setup\nconst io = new Server(server, {\n  cors: {\n    origin: [\"http://localhost:3000\", \"http://localhost:3001\"]\n  }\n});\nio.on(\"connection\", socket => {\n  console.log(`User Connected: ${socket.id}`);\n  socket.on(\"send_message\", data => {\n    io.emit(\"receive_message\", data);\n  });\n  socket.on(\"disconnect\", () => {\n    console.log(\"User Disconnected\");\n  });\n});\n\n// âœ… Start Server\nconst PORT = process.env.PORT || 5000;\nserver.listen(PORT, () => console.log(`ðŸš€ Server running on port ${PORT}`));","map":{"version":3,"names":["require","config","express","cors","http","path","multer","Server","connectDB","paymentRoutes","authRoutes","workerRoutes","equipmentRoutes","weatherRoutes","marketplaceRoutes","videoCallRoutes","chatbotRoutes","app","server","createServer","use","json","urlencoded","extended","origin","methods","credentials","io","on","socket","console","log","id","data","emit","PORT","process","env","listen"],"sources":["D:/agri-community/client/src/components/Chat/ChatRoom.jsx"],"sourcesContent":["require(\"dotenv\").config();\r\nconst express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nconst http = require(\"http\");\r\nconst path = require(\"path\");\r\nconst multer = require(\"multer\");\r\nconst { Server } = require(\"socket.io\");\r\nconst connectDB = require(\"./config/db\");\r\n// Import Routes\r\nconst paymentRoutes = require(\"./routes/paymentRoutes\");\r\nconst authRoutes = require(\"./routes/authRoutes\");\r\nconst workerRoutes = require(\"./routes/workerRoutes\");\r\nconst equipmentRoutes = require(\"./routes/equipmentRoutes\");\r\nconst weatherRoutes = require(\"./routes/weatherRoutes\");\r\nconst marketplaceRoutes = require(\"./routes/marketplaceRoutes\");\r\nconst videoCallRoutes = require(\"./routes/videoCallRoutes\");\r\nconst chatbotRoutes = require(\"./routes/chatbotRoutes\"); // âœ… Added Chatbot Routes\r\n\r\nconst app = express();\r\nconst server = http.createServer(app);\r\nconnectDB();\r\n\r\n// âœ… Middleware\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n// âœ… Enable CORS\r\napp.use(\r\n  cors({\r\n    origin: [\"http://localhost:3000\", \"http://localhost:3001\"],\r\n    methods: [\"GET\", \"POST\"],\r\n    credentials: true,\r\n  })\r\n);\r\n\r\n// âœ… Use Routes\r\napp.use(\"/api/auth\", authRoutes);\r\napp.use(\"/api/workers\", workerRoutes);\r\napp.use(\"/api/equipment\", equipmentRoutes);\r\napp.use(\"/api/weather\", weatherRoutes);\r\napp.use(\"/api/marketplace\", marketplaceRoutes);\r\napp.use(\"/api/payment\", paymentRoutes);\r\napp.use(\"/api/video-call\", videoCallRoutes);\r\napp.use(\"/api/chatbot\", chatbotRoutes); // âœ… Chatbot API Integrated\r\n\r\n// âœ… Socket.io Setup\r\nconst io = new Server(server, {\r\n  cors: { origin: [\"http://localhost:3000\", \"http://localhost:3001\"] },\r\n});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  console.log(`User Connected: ${socket.id}`);\r\n\r\n  socket.on(\"send_message\", (data) => {\r\n    io.emit(\"receive_message\", data);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(\"User Disconnected\");\r\n  });\r\n});\r\n\r\n// âœ… Start Server\r\nconst PORT = process.env.PORT || 5000;\r\nserver.listen(PORT, () => console.log(`ðŸš€ Server running on port ${PORT}`));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}