{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Messaging\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrandRegistrationPage = exports.BrandRegistrationListInstance = exports.BrandRegistrationInstance = exports.BrandRegistrationContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst brandRegistrationOtp_1 = require(\"./brandRegistration/brandRegistrationOtp\");\nconst brandVetting_1 = require(\"./brandRegistration/brandVetting\");\nclass BrandRegistrationContextImpl {\n  constructor(_version, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      sid\n    };\n    this._uri = `/a2p/BrandRegistrations/${sid}`;\n  }\n  get brandRegistrationOtps() {\n    this._brandRegistrationOtps = this._brandRegistrationOtps || (0, brandRegistrationOtp_1.BrandRegistrationOtpListInstance)(this._version, this._solution.sid);\n    return this._brandRegistrationOtps;\n  }\n  get brandVettings() {\n    this._brandVettings = this._brandVettings || (0, brandVetting_1.BrandVettingListInstance)(this._version, this._solution.sid);\n    return this._brandVettings;\n  }\n  fetch(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new BrandRegistrationInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new BrandRegistrationInstance(operationVersion, payload, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.BrandRegistrationContextImpl = BrandRegistrationContextImpl;\nclass BrandRegistrationInstance {\n  constructor(_version, payload, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.accountSid = payload.account_sid;\n    this.customerProfileBundleSid = payload.customer_profile_bundle_sid;\n    this.a2pProfileBundleSid = payload.a2p_profile_bundle_sid;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.brandType = payload.brand_type;\n    this.status = payload.status;\n    this.tcrId = payload.tcr_id;\n    this.failureReason = payload.failure_reason;\n    this.errors = payload.errors;\n    this.url = payload.url;\n    this.brandScore = deserialize.integer(payload.brand_score);\n    this.brandFeedback = payload.brand_feedback;\n    this.identityStatus = payload.identity_status;\n    this.russell3000 = payload.russell_3000;\n    this.governmentEntity = payload.government_entity;\n    this.taxExemptStatus = payload.tax_exempt_status;\n    this.skipAutomaticSecVet = payload.skip_automatic_sec_vet;\n    this.mock = payload.mock;\n    this.links = payload.links;\n    this._solution = {\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new BrandRegistrationContextImpl(this._version, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Fetch a BrandRegistrationInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed BrandRegistrationInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  /**\n   * Update a BrandRegistrationInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed BrandRegistrationInstance\n   */\n  update(callback) {\n    return this._proxy.update(callback);\n  }\n  /**\n   * Access the brandRegistrationOtps.\n   */\n  brandRegistrationOtps() {\n    return this._proxy.brandRegistrationOtps;\n  }\n  /**\n   * Access the brandVettings.\n   */\n  brandVettings() {\n    return this._proxy.brandVettings;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      accountSid: this.accountSid,\n      customerProfileBundleSid: this.customerProfileBundleSid,\n      a2pProfileBundleSid: this.a2pProfileBundleSid,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      brandType: this.brandType,\n      status: this.status,\n      tcrId: this.tcrId,\n      failureReason: this.failureReason,\n      errors: this.errors,\n      url: this.url,\n      brandScore: this.brandScore,\n      brandFeedback: this.brandFeedback,\n      identityStatus: this.identityStatus,\n      russell3000: this.russell3000,\n      governmentEntity: this.governmentEntity,\n      taxExemptStatus: this.taxExemptStatus,\n      skipAutomaticSecVet: this.skipAutomaticSecVet,\n      mock: this.mock,\n      links: this.links\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.BrandRegistrationInstance = BrandRegistrationInstance;\nfunction BrandRegistrationListInstance(version) {\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new BrandRegistrationContextImpl(version, sid);\n  };\n  instance._version = version;\n  instance._solution = {};\n  instance._uri = `/a2p/BrandRegistrations`;\n  instance.create = function create(params, callback) {\n    if (params === null || params === undefined) {\n      throw new Error('Required parameter \"params\" missing.');\n    }\n    if (params[\"customerProfileBundleSid\"] === null || params[\"customerProfileBundleSid\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['customerProfileBundleSid']\\\" missing.\");\n    }\n    if (params[\"a2PProfileBundleSid\"] === null || params[\"a2PProfileBundleSid\"] === undefined) {\n      throw new Error(\"Required parameter \\\"params['a2PProfileBundleSid']\\\" missing.\");\n    }\n    let data = {};\n    data[\"CustomerProfileBundleSid\"] = params[\"customerProfileBundleSid\"];\n    data[\"A2PProfileBundleSid\"] = params[\"a2PProfileBundleSid\"];\n    if (params[\"brandType\"] !== undefined) data[\"BrandType\"] = params[\"brandType\"];\n    if (params[\"mock\"] !== undefined) data[\"Mock\"] = serialize.bool(params[\"mock\"]);\n    if (params[\"skipAutomaticSecVet\"] !== undefined) data[\"SkipAutomaticSecVet\"] = serialize.bool(params[\"skipAutomaticSecVet\"]);\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.create({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new BrandRegistrationInstance(operationVersion, payload));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new BrandRegistrationPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new BrandRegistrationPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.BrandRegistrationListInstance = BrandRegistrationListInstance;\nclass BrandRegistrationPage extends Page_1.default {\n  /**\n   * Initialize the BrandRegistrationPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of BrandRegistrationInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new BrandRegistrationInstance(this._version, payload);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.BrandRegistrationPage = BrandRegistrationPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","BrandRegistrationPage","BrandRegistrationListInstance","BrandRegistrationInstance","BrandRegistrationContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","brandRegistrationOtp_1","brandVetting_1","constructor","_version","sid","isValidPathParam","Error","_solution","_uri","brandRegistrationOtps","_brandRegistrationOtps","BrandRegistrationOtpListInstance","brandVettings","_brandVettings","BrandVettingListInstance","fetch","callback","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","update","toJSON","inspect","custom","_depth","options","accountSid","account_sid","customerProfileBundleSid","customer_profile_bundle_sid","a2pProfileBundleSid","a2p_profile_bundle_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","brandType","brand_type","status","tcrId","tcr_id","failureReason","failure_reason","errors","url","brandScore","integer","brand_score","brandFeedback","brand_feedback","identityStatus","identity_status","russell3000","russell_3000","governmentEntity","government_entity","taxExemptStatus","tax_exempt_status","skipAutomaticSecVet","skip_automatic_sec_vet","mock","links","_proxy","_context","version","get","create","params","undefined","data","bool","page","Function","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["D:/agri-community/client/node_modules/twilio/lib/rest/messaging/v1/brandRegistration.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Messaging\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrandRegistrationPage = exports.BrandRegistrationListInstance = exports.BrandRegistrationInstance = exports.BrandRegistrationContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../base/Page\"));\nconst deserialize = require(\"../../../base/deserialize\");\nconst serialize = require(\"../../../base/serialize\");\nconst utility_1 = require(\"../../../base/utility\");\nconst brandRegistrationOtp_1 = require(\"./brandRegistration/brandRegistrationOtp\");\nconst brandVetting_1 = require(\"./brandRegistration/brandVetting\");\nclass BrandRegistrationContextImpl {\n    constructor(_version, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { sid };\n        this._uri = `/a2p/BrandRegistrations/${sid}`;\n    }\n    get brandRegistrationOtps() {\n        this._brandRegistrationOtps =\n            this._brandRegistrationOtps ||\n                (0, brandRegistrationOtp_1.BrandRegistrationOtpListInstance)(this._version, this._solution.sid);\n        return this._brandRegistrationOtps;\n    }\n    get brandVettings() {\n        this._brandVettings =\n            this._brandVettings ||\n                (0, brandVetting_1.BrandVettingListInstance)(this._version, this._solution.sid);\n        return this._brandVettings;\n    }\n    fetch(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new BrandRegistrationInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new BrandRegistrationInstance(operationVersion, payload, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.BrandRegistrationContextImpl = BrandRegistrationContextImpl;\nclass BrandRegistrationInstance {\n    constructor(_version, payload, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.accountSid = payload.account_sid;\n        this.customerProfileBundleSid = payload.customer_profile_bundle_sid;\n        this.a2pProfileBundleSid = payload.a2p_profile_bundle_sid;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.brandType = payload.brand_type;\n        this.status = payload.status;\n        this.tcrId = payload.tcr_id;\n        this.failureReason = payload.failure_reason;\n        this.errors = payload.errors;\n        this.url = payload.url;\n        this.brandScore = deserialize.integer(payload.brand_score);\n        this.brandFeedback = payload.brand_feedback;\n        this.identityStatus = payload.identity_status;\n        this.russell3000 = payload.russell_3000;\n        this.governmentEntity = payload.government_entity;\n        this.taxExemptStatus = payload.tax_exempt_status;\n        this.skipAutomaticSecVet = payload.skip_automatic_sec_vet;\n        this.mock = payload.mock;\n        this.links = payload.links;\n        this._solution = { sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new BrandRegistrationContextImpl(this._version, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Fetch a BrandRegistrationInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed BrandRegistrationInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    /**\n     * Update a BrandRegistrationInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed BrandRegistrationInstance\n     */\n    update(callback) {\n        return this._proxy.update(callback);\n    }\n    /**\n     * Access the brandRegistrationOtps.\n     */\n    brandRegistrationOtps() {\n        return this._proxy.brandRegistrationOtps;\n    }\n    /**\n     * Access the brandVettings.\n     */\n    brandVettings() {\n        return this._proxy.brandVettings;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            accountSid: this.accountSid,\n            customerProfileBundleSid: this.customerProfileBundleSid,\n            a2pProfileBundleSid: this.a2pProfileBundleSid,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            brandType: this.brandType,\n            status: this.status,\n            tcrId: this.tcrId,\n            failureReason: this.failureReason,\n            errors: this.errors,\n            url: this.url,\n            brandScore: this.brandScore,\n            brandFeedback: this.brandFeedback,\n            identityStatus: this.identityStatus,\n            russell3000: this.russell3000,\n            governmentEntity: this.governmentEntity,\n            taxExemptStatus: this.taxExemptStatus,\n            skipAutomaticSecVet: this.skipAutomaticSecVet,\n            mock: this.mock,\n            links: this.links,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.BrandRegistrationInstance = BrandRegistrationInstance;\nfunction BrandRegistrationListInstance(version) {\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new BrandRegistrationContextImpl(version, sid);\n    };\n    instance._version = version;\n    instance._solution = {};\n    instance._uri = `/a2p/BrandRegistrations`;\n    instance.create = function create(params, callback) {\n        if (params === null || params === undefined) {\n            throw new Error('Required parameter \"params\" missing.');\n        }\n        if (params[\"customerProfileBundleSid\"] === null ||\n            params[\"customerProfileBundleSid\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['customerProfileBundleSid']\\\" missing.\");\n        }\n        if (params[\"a2PProfileBundleSid\"] === null ||\n            params[\"a2PProfileBundleSid\"] === undefined) {\n            throw new Error(\"Required parameter \\\"params['a2PProfileBundleSid']\\\" missing.\");\n        }\n        let data = {};\n        data[\"CustomerProfileBundleSid\"] = params[\"customerProfileBundleSid\"];\n        data[\"A2PProfileBundleSid\"] = params[\"a2PProfileBundleSid\"];\n        if (params[\"brandType\"] !== undefined)\n            data[\"BrandType\"] = params[\"brandType\"];\n        if (params[\"mock\"] !== undefined)\n            data[\"Mock\"] = serialize.bool(params[\"mock\"]);\n        if (params[\"skipAutomaticSecVet\"] !== undefined)\n            data[\"SkipAutomaticSecVet\"] = serialize.bool(params[\"skipAutomaticSecVet\"]);\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.create({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new BrandRegistrationInstance(operationVersion, payload));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new BrandRegistrationPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new BrandRegistrationPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.BrandRegistrationListInstance = BrandRegistrationListInstance;\nclass BrandRegistrationPage extends Page_1.default {\n    /**\n     * Initialize the BrandRegistrationPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of BrandRegistrationInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new BrandRegistrationInstance(this._version, payload);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.BrandRegistrationPage = BrandRegistrationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}