{"ast":null,"code":"var _jsxFileName = \"D:\\\\agri-community\\\\client\\\\src\\\\components\\\\Marketplace\\\\BuyProduct.jsx\",\n  _s = $RefreshSig$();\n// // components/Marketplace/BuyProduct.jsx\n// import { useState, useEffect } from \"react\";\n// import '../../styles/buyproduct.css'\n// const BuyProduct = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/marketplace\")\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data));\n//   }, []);\n\n//   const handleBuy = async (productId, price, sellerEmail) => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ productId, price, sellerEmail }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Payment creation failed');\n//       }\n\n//       const data = await response.json();\n//       const razorpayOrderId = data.id;\n\n//       // Razorpay integration\n//       const options = {\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,  // Make sure this is set in your .env file\n//         amount: price * 100, // Convert to paise\n//         currency: 'INR',\n//         order_id: razorpayOrderId,\n//         handler: function (response) {\n//           // Handle success (this would be a callback for successful payment)\n//           alert('Payment successful!');\n//           // Optionally, update the payment status in your backend\n//         },\n//         prefill: {\n//           name: 'Buyer Name',\n//           email: 'buyer@example.com',\n//           contact: '1234567890',\n//         },\n//         theme: {\n//           color: '#F37254',\n//         },\n//       };\n\n//       const rzp1 = new window.Razorpay(options);  // Ensure Razorpay instance is created correctly\n//       rzp1.open();  // Open the payment window\n\n//     } catch (error) {\n//       console.error('Payment error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"buy-product-container\">\n//       <h2>Available Products</h2>\n//       <div className=\"product-list\">\n//         {products.map((product) => (\n//           <div key={product._id} className=\"product-card\">\n//             <h3>{product.name}</h3>\n//             <p>Price: â‚¹{product.price}</p>\n//             <p>Seller: {product.seller}</p>\n//             <button onClick={() => handleBuy(product._id, product.price, product.seller)}>Buy Now</button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BuyProduct;\n\nimport { useState, useEffect } from \"react\";\nimport VideoCall from \"./VideoCall\";\nimport '../../styles/buyproduct.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuyProduct = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedSeller, setSelectedSeller] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/marketplace\").then(response => response.json()).then(data => setProducts(data));\n  }, []);\n  const handleBuy = async (productId, price, sellerContact) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/payment/payment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          productId,\n          price,\n          sellerContact\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Payment creation failed');\n      }\n      const data = await response.json();\n      const razorpayOrderId = data.id;\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: price * 100,\n        currency: 'INR',\n        order_id: razorpayOrderId,\n        handler: function (response) {\n          alert('Payment successful!');\n        },\n        prefill: {\n          name: 'Buyer Name',\n          email: 'buyer@example.com',\n          contact: '1234567890'\n        },\n        theme: {\n          color: '#F37254'\n        }\n      };\n      const rzp1 = new window.Razorpay(options);\n      rzp1.open();\n    } catch (error) {\n      console.error('Payment error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buy-product-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \\u20B9\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Seller: \", product.seller]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBuy(product._id, product.price, product.sellerContact),\n          children: \"Buy Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedSeller(product.sellerContact),\n          children: \"Video Call Seller\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), selectedSeller && /*#__PURE__*/_jsxDEV(VideoCall, {\n      sellerContact: selectedSeller\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(BuyProduct, \"188AICBsB9rgNCOZ1joLsblDBB8=\");\n_c = BuyProduct;\nexport default BuyProduct;\nvar _c;\n$RefreshReg$(_c, \"BuyProduct\");","map":{"version":3,"names":["useState","useEffect","VideoCall","jsxDEV","_jsxDEV","BuyProduct","_s","products","setProducts","selectedSeller","setSelectedSeller","fetch","then","response","json","data","handleBuy","productId","price","sellerContact","method","headers","body","JSON","stringify","ok","Error","razorpayOrderId","id","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","amount","currency","order_id","handler","alert","prefill","name","email","contact","theme","color","rzp1","window","Razorpay","open","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","seller","onClick","_id","_c","$RefreshReg$"],"sources":["D:/agri-community/client/src/components/Marketplace/BuyProduct.jsx"],"sourcesContent":["// // components/Marketplace/BuyProduct.jsx\r\n// import { useState, useEffect } from \"react\";\r\n// import '../../styles/buyproduct.css'\r\n// const BuyProduct = () => {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/marketplace\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProducts(data));\r\n//   }, []);\r\n\r\n//   const handleBuy = async (productId, price, sellerEmail) => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ productId, price, sellerEmail }),\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error('Payment creation failed');\r\n//       }\r\n  \r\n//       const data = await response.json();\r\n//       const razorpayOrderId = data.id;\r\n  \r\n//       // Razorpay integration\r\n//       const options = {\r\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,  // Make sure this is set in your .env file\r\n//         amount: price * 100, // Convert to paise\r\n//         currency: 'INR',\r\n//         order_id: razorpayOrderId,\r\n//         handler: function (response) {\r\n//           // Handle success (this would be a callback for successful payment)\r\n//           alert('Payment successful!');\r\n//           // Optionally, update the payment status in your backend\r\n//         },\r\n//         prefill: {\r\n//           name: 'Buyer Name',\r\n//           email: 'buyer@example.com',\r\n//           contact: '1234567890',\r\n//         },\r\n//         theme: {\r\n//           color: '#F37254',\r\n//         },\r\n//       };\r\n  \r\n//       const rzp1 = new window.Razorpay(options);  // Ensure Razorpay instance is created correctly\r\n//       rzp1.open();  // Open the payment window\r\n  \r\n//     } catch (error) {\r\n//       console.error('Payment error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"buy-product-container\">\r\n//       <h2>Available Products</h2>\r\n//       <div className=\"product-list\">\r\n//         {products.map((product) => (\r\n//           <div key={product._id} className=\"product-card\">\r\n//             <h3>{product.name}</h3>\r\n//             <p>Price: â‚¹{product.price}</p>\r\n//             <p>Seller: {product.seller}</p>\r\n//             <button onClick={() => handleBuy(product._id, product.price, product.seller)}>Buy Now</button>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BuyProduct;\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport VideoCall from \"./VideoCall\";\r\nimport '../../styles/buyproduct.css';\r\n\r\nconst BuyProduct = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedSeller, setSelectedSeller] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/marketplace\")\r\n      .then((response) => response.json())\r\n      .then((data) => setProducts(data));\r\n  }, []);\r\n\r\n  const handleBuy = async (productId, price, sellerContact) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/payment/payment', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ productId, price, sellerContact }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Payment creation failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const razorpayOrderId = data.id;\r\n\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: price * 100,\r\n        currency: 'INR',\r\n        order_id: razorpayOrderId,\r\n        handler: function (response) {\r\n          alert('Payment successful!');\r\n        },\r\n        prefill: { name: 'Buyer Name', email: 'buyer@example.com', contact: '1234567890' },\r\n        theme: { color: '#F37254' },\r\n      };\r\n\r\n      const rzp1 = new window.Razorpay(options);\r\n      rzp1.open();\r\n    } catch (error) {\r\n      console.error('Payment error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"buy-product-container\">\r\n      <h2>Available Products</h2>\r\n      <div className=\"product-list\">\r\n        {products.map((product) => (\r\n          <div key={product._id} className=\"product-card\">\r\n            <h3>{product.name}</h3>\r\n            <p>Price: â‚¹{product.price}</p>\r\n            <p>Seller: {product.seller}</p>\r\n            <button onClick={() => handleBuy(product._id, product.price, product.sellerContact)}>Buy Now</button>\r\n            <button onClick={() => setSelectedSeller(product.sellerContact)}>Video Call Seller</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedSeller && <VideoCall sellerContact={selectedSeller} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyProduct;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}