{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Video\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnonymizeListInstance = exports.AnonymizeInstance = exports.AnonymizeContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass AnonymizeContextImpl {\n  constructor(_version, roomSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(roomSid)) {\n      throw new Error(\"Parameter 'roomSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      roomSid,\n      sid\n    };\n    this._uri = `/Rooms/${roomSid}/Participants/${sid}/Anonymize`;\n  }\n  update(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new AnonymizeInstance(operationVersion, payload, instance._solution.roomSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AnonymizeContextImpl = AnonymizeContextImpl;\nclass AnonymizeInstance {\n  constructor(_version, payload, roomSid, sid) {\n    this._version = _version;\n    this.sid = payload.sid;\n    this.roomSid = payload.room_sid;\n    this.accountSid = payload.account_sid;\n    this.status = payload.status;\n    this.identity = payload.identity;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.startTime = deserialize.iso8601DateTime(payload.start_time);\n    this.endTime = deserialize.iso8601DateTime(payload.end_time);\n    this.duration = deserialize.integer(payload.duration);\n    this.url = payload.url;\n    this._solution = {\n      roomSid,\n      sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new AnonymizeContextImpl(this._version, this._solution.roomSid, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Update a AnonymizeInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed AnonymizeInstance\n   */\n  update(callback) {\n    return this._proxy.update(callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      sid: this.sid,\n      roomSid: this.roomSid,\n      accountSid: this.accountSid,\n      status: this.status,\n      identity: this.identity,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      duration: this.duration,\n      url: this.url\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.AnonymizeInstance = AnonymizeInstance;\nfunction AnonymizeListInstance(version, roomSid, sid) {\n  if (!(0, utility_1.isValidPathParam)(roomSid)) {\n    throw new Error(\"Parameter 'roomSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(sid)) {\n    throw new Error(\"Parameter 'sid' is not valid.\");\n  }\n  const instance = () => instance.get();\n  instance.get = function get() {\n    return new AnonymizeContextImpl(version, roomSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    roomSid,\n    sid\n  };\n  instance._uri = ``;\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.AnonymizeListInstance = AnonymizeListInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","AnonymizeListInstance","AnonymizeInstance","AnonymizeContextImpl","util_1","require","deserialize","serialize","utility_1","constructor","_version","roomSid","sid","isValidPathParam","Error","_solution","_uri","update","callback","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","toJSON","inspect","custom","_depth","options","room_sid","accountSid","account_sid","status","identity","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","startTime","start_time","endTime","end_time","duration","integer","url","_proxy","_context","version","get","inspectImpl"],"sources":["D:/agri-community/client/node_modules/twilio/lib/rest/video/v1/room/participant/anonymize.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Video\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AnonymizeListInstance = exports.AnonymizeInstance = exports.AnonymizeContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass AnonymizeContextImpl {\n    constructor(_version, roomSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(roomSid)) {\n            throw new Error(\"Parameter 'roomSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { roomSid, sid };\n        this._uri = `/Rooms/${roomSid}/Participants/${sid}/Anonymize`;\n    }\n    update(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new AnonymizeInstance(operationVersion, payload, instance._solution.roomSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AnonymizeContextImpl = AnonymizeContextImpl;\nclass AnonymizeInstance {\n    constructor(_version, payload, roomSid, sid) {\n        this._version = _version;\n        this.sid = payload.sid;\n        this.roomSid = payload.room_sid;\n        this.accountSid = payload.account_sid;\n        this.status = payload.status;\n        this.identity = payload.identity;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.startTime = deserialize.iso8601DateTime(payload.start_time);\n        this.endTime = deserialize.iso8601DateTime(payload.end_time);\n        this.duration = deserialize.integer(payload.duration);\n        this.url = payload.url;\n        this._solution = { roomSid, sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new AnonymizeContextImpl(this._version, this._solution.roomSid, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Update a AnonymizeInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed AnonymizeInstance\n     */\n    update(callback) {\n        return this._proxy.update(callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            sid: this.sid,\n            roomSid: this.roomSid,\n            accountSid: this.accountSid,\n            status: this.status,\n            identity: this.identity,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            startTime: this.startTime,\n            endTime: this.endTime,\n            duration: this.duration,\n            url: this.url,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.AnonymizeInstance = AnonymizeInstance;\nfunction AnonymizeListInstance(version, roomSid, sid) {\n    if (!(0, utility_1.isValidPathParam)(roomSid)) {\n        throw new Error(\"Parameter 'roomSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n        throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    const instance = (() => instance.get());\n    instance.get = function get() {\n        return new AnonymizeContextImpl(version, roomSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { roomSid, sid };\n    instance._uri = ``;\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.AnonymizeListInstance = AnonymizeListInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}