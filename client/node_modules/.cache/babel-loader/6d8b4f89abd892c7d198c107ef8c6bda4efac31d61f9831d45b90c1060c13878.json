{"ast":null,"code":"var _jsxFileName = \"D:\\\\agri-community\\\\client\\\\src\\\\components\\\\Marketplace\\\\BuyProduct.jsx\",\n  _s = $RefreshSig$();\n// components/BuyProduct.jsx\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuyProduct = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/marketplace').then(response => response.json()).then(data => setProducts(data));\n  }, []);\n  const handleBuy = async (productId, price, sellerEmail) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/payment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          productId,\n          price,\n          sellerEmail\n        })\n      });\n      const data = await response.json();\n      const options = {\n        key: process.env.RAZORPAY_KEY_ID,\n        // Razorpay key\n        amount: data.amount,\n        // Amount in INR (paise)\n        currency: data.currency,\n        // Currency type\n        order_id: data.id,\n        // Razorpay order ID\n        handler: function (response) {\n          alert('Payment successful');\n          // You can also send the payment details to your backend here for order confirmation.\n        },\n        prefill: {\n          name: \"Buyer's Name\",\n          email: \"buyer@example.com\"\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      console.error(\"Error during payment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \\u20B9\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBuy(product._id, product.price, product.seller),\n        children: \"Buy Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, product._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(BuyProduct, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = BuyProduct;\nexport default BuyProduct;\nvar _c;\n$RefreshReg$(_c, \"BuyProduct\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","BuyProduct","_s","products","setProducts","fetch","then","response","json","data","handleBuy","productId","price","sellerEmail","method","headers","body","JSON","stringify","options","key","process","env","RAZORPAY_KEY_ID","amount","currency","order_id","id","handler","alert","prefill","name","email","rzp","window","Razorpay","open","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","onClick","_id","seller","_c","$RefreshReg$"],"sources":["D:/agri-community/client/src/components/Marketplace/BuyProduct.jsx"],"sourcesContent":["// components/BuyProduct.jsx\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst BuyProduct = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/marketplace')\r\n      .then((response) => response.json())\r\n      .then((data) => setProducts(data));\r\n  }, []);\r\n\r\n  const handleBuy = async (productId, price, sellerEmail) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/payment\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ productId, price, sellerEmail }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      const options = {\r\n        key: process.env.RAZORPAY_KEY_ID, // Razorpay key\r\n        amount: data.amount,              // Amount in INR (paise)\r\n        currency: data.currency,          // Currency type\r\n        order_id: data.id,                // Razorpay order ID\r\n        handler: function (response) {\r\n          alert('Payment successful');\r\n          // You can also send the payment details to your backend here for order confirmation.\r\n        },\r\n        prefill: {\r\n          name: \"Buyer's Name\",\r\n          email: \"buyer@example.com\",\r\n        },\r\n      };\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } catch (error) {\r\n      console.error(\"Error during payment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Products</h2>\r\n      {products.map((product) => (\r\n        <div key={product._id}>\r\n          <h3>{product.name}</h3>\r\n          <p>Price: â‚¹{product.price}</p>\r\n          <button onClick={() => handleBuy(product._id, product.price, product.seller)}>Buy Now</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuyProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}