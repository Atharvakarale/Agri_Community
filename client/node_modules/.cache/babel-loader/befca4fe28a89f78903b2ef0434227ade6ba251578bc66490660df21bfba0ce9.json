{"ast":null,"code":"// const API_KEY = \"AIzaSyBxZA3gLH7po1pkDO6tN1_oodFJ6scp3iQ\"; // Replace with your actual key\n\n// export const translateText = async (text, targetLanguage) => {\n//   try {\n//     const response = await fetch(\n//       `https://translation.googleapis.com/language/translate/v2?key=${API_KEY}`,\n//       {\n//         method: \"POST\",\n//         body: JSON.stringify({\n//           q: text,\n//           target: targetLanguage,\n//           format: \"text\",\n//         }),\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       }\n//     );\n\n//     const data = await response.json();\n//     return data.data.translations[0].translatedText;\n//   } catch (error) {\n//     console.error(\"Translation Error:\", error);\n//     return text; // Return original text in case of error\n//   }\n// };\n\nconst API_KEY = \"YOUR_GOOGLE_TRANSLATE_API_KEY\"; // Replace with your actual API key\n\nexport const translateText = async (text, targetLanguage) => {\n  try {\n    var _data$data, _data$data$translatio;\n    const response = await fetch(`https://translation.googleapis.com/language/translate/v2?key=${API_KEY}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        q: text,\n        target: targetLanguage,\n        format: \"text\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    return (data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$translatio = _data$data.translations[0]) === null || _data$data$translatio === void 0 ? void 0 : _data$data$translatio.translatedText) || text;\n  } catch (error) {\n    console.error(\"Translation Error:\", error);\n    return text;\n  }\n};","map":{"version":3,"names":["API_KEY","translateText","text","targetLanguage","_data$data","_data$data$translatio","response","fetch","method","body","JSON","stringify","q","target","format","headers","data","json","translations","translatedText","error","console"],"sources":["D:/agri-community/client/src/utils/translate.js"],"sourcesContent":["// const API_KEY = \"AIzaSyBxZA3gLH7po1pkDO6tN1_oodFJ6scp3iQ\"; // Replace with your actual key\r\n\r\n// export const translateText = async (text, targetLanguage) => {\r\n//   try {\r\n//     const response = await fetch(\r\n//       `https://translation.googleapis.com/language/translate/v2?key=${API_KEY}`,\r\n//       {\r\n//         method: \"POST\",\r\n//         body: JSON.stringify({\r\n//           q: text,\r\n//           target: targetLanguage,\r\n//           format: \"text\",\r\n//         }),\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//       }\r\n//     );\r\n\r\n//     const data = await response.json();\r\n//     return data.data.translations[0].translatedText;\r\n//   } catch (error) {\r\n//     console.error(\"Translation Error:\", error);\r\n//     return text; // Return original text in case of error\r\n//   }\r\n// };\r\n\r\n\r\nconst API_KEY = \"YOUR_GOOGLE_TRANSLATE_API_KEY\"; // Replace with your actual API key\r\n\r\nexport const translateText = async (text, targetLanguage) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://translation.googleapis.com/language/translate/v2?key=${API_KEY}`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          q: text,\r\n          target: targetLanguage,\r\n          format: \"text\",\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    return data?.data?.translations[0]?.translatedText || text;\r\n  } catch (error) {\r\n    console.error(\"Translation Error:\", error);\r\n    return text;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMA,OAAO,GAAG,+BAA+B,CAAC,CAAC;;AAEjD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,cAAc,KAAK;EAC3D,IAAI;IAAA,IAAAC,UAAA,EAAAC,qBAAA;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgEP,OAAO,EAAE,EACzE;MACEQ,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,CAAC,EAAEV,IAAI;QACPW,MAAM,EAAEV,cAAc;QACtBW,MAAM,EAAE;MACV,CAAC,CAAC;MACFC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAO,CAAAD,IAAI,aAAJA,IAAI,wBAAAZ,UAAA,GAAJY,IAAI,CAAEA,IAAI,cAAAZ,UAAA,wBAAAC,qBAAA,GAAVD,UAAA,CAAYc,YAAY,CAAC,CAAC,CAAC,cAAAb,qBAAA,uBAA3BA,qBAAA,CAA6Bc,cAAc,KAAIjB,IAAI;EAC5D,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAOlB,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}