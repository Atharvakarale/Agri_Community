{"ast":null,"code":"\n\n// // components/Marketplace/BuyProduct.jsx\n// import { useState, useEffect } from \"react\";\n// import '../../styles/buyproduct.css'\n// const BuyProduct = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/marketplace\")\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data));\n//   }, []);\n\n//   const handleBuy = async (productId, price, sellerEmail) => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ productId, price, sellerEmail }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Payment creation failed');\n//       }\n\n//       const data = await response.json();\n//       const razorpayOrderId = data.id;\n\n//       // Razorpay integration\n//       const options = {\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,  // Make sure this is set in your .env file\n//         amount: price * 100, // Convert to paise\n//         currency: 'INR',\n//         order_id: razorpayOrderId,\n//         handler: function (response) {\n//           // Handle success (this would be a callback for successful payment)\n//           alert('Payment successful!');\n//           // Optionally, update the payment status in your backend\n//         },\n//         prefill: {\n//           name: 'Buyer Name',\n//           email: 'buyer@example.com',\n//           contact: '1234567890',\n//         },\n//         theme: {\n//           color: '#F37254',\n//         },\n//       };\n\n//       const rzp1 = new window.Razorpay(options);  // Ensure Razorpay instance is created correctly\n//       rzp1.open();  // Open the payment window\n\n//     } catch (error) {\n//       console.error('Payment error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"buy-product-container\">\n//       <h2>Available Products</h2>\n//       <div className=\"product-list\">\n//         {products.map((product) => (\n//           <div key={product._id} className=\"product-card\">\n//             <h3>{product.name}</h3>\n//             <p>Price: ₹{product.price}</p>\n//             <p>Seller: {product.seller}</p>\n//             <button onClick={() => handleBuy(product._id, product.price, product.seller)}>Buy Now</button>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BuyProduct;\n\n// // import { useState, useEffect } from \"react\";\n// // import '../../styles/buyproduct.css';\n\n// // const BuyProduct = () => {\n// //   const [products, setProducts] = useState([]);\n\n// //   useEffect(() => {\n// //     fetch(\"http://localhost:5000/api/marketplace\")\n// //       .then((response) => response.json())\n// //       .then((data) => setProducts(data));\n// //   }, []);\n\n// //   const handleVideoCall = async (sellerPhone, productName) => {\n// //     if (!sellerPhone || !productName) {\n// //       alert(\"Seller phone or product name is missing!\");\n// //       return;\n// //     }\n\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\n// //         method: \"POST\",\n// //         headers: {\n// //           \"Content-Type\": \"application/json\",\n// //         },\n// //         body: JSON.stringify({ sellerPhone, productName }),\n// //       });\n\n// //       const data = await response.json();\n\n// //       if (!response.ok) {\n// //         throw new Error(data.error || \"Failed to send video call link\");\n// //       }\n\n// //       alert(`Video call link sent: ${data.meetingLink}`);\n// //     } catch (error) {\n// //       console.error(\"Error:\", error);\n// //       alert(\"Error sending video call link.\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"buy-product-container\">\n// //       <h2>Available Products</h2>\n// //       <div className=\"product-list\">\n// //         {products.map((product) => (\n// //           <div key={product._id} className=\"product-card\">\n// //             <h3>{product.name}</h3>\n// //             <p>Price: ₹{product.price}</p>\n// //             <p>Seller: {product.seller}</p>\n// //             <div className=\"button-group\">\n// //               <button className=\"buy-button\">Buy Now</button>\n// //               <button\n// //                 className=\"video-call-button\"\n// //                 onClick={() => handleVideoCall(product.phone, product.name)}\n// //               >\n// //                 Video Call Seller\n// //               </button>\n// //             </div>\n// //           </div>\n// //         ))}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default BuyProduct;\n\n// import { useState, useEffect } from \"react\";\n// import \"../../styles/buyproduct.css\";\n\n// const BuyProduct = () => {\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/marketplace\")\n//       .then((response) => response.json())\n//       .then((data) => setProducts(data));\n//   }, []);\n\n//   const handleVideoCall = async (sellerPhone, productName) => {\n//     if (!sellerPhone || !productName) {\n//       alert(\"Seller phone or product name is missing!\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ sellerPhone, productName }),\n//       });\n\n//       const data = await response.json();\n\n//       if (!response.ok) {\n//         throw new Error(data.error || \"Failed to create video call link\");\n//       }\n\n//       // ✅ Open the meeting link for the customer automatically\n//       window.open(data.meetingLink, \"_blank\");\n\n//       alert(`Video call link sent to seller: ${data.meetingLink}`);\n\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"Error starting video call.\");\n//     }\n//   };\n\n// const handleBuy = async (productId, price, sellerEmail) => {\n//   try {\n//     const response = await fetch('http://localhost:5000/api/payment/payment', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ productId, price, sellerEmail }),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error('Payment creation failed');\n//     }\n\n//     const data = await response.json();\n//     const razorpayOrderId = data.id;\n\n//     // Razorpay integration\n//     const options = {\n//       key: process.env.REACT_APP_RAZORPAY_KEY_ID,  // Make sure this is set in your .env file\n//       amount: price * 100, // Convert to paise\n//       currency: 'INR',\n//       order_id: razorpayOrderId,\n//       handler: function (response) {\n//         // Handle success (this would be a callback for successful payment)\n//         alert('Payment successful!');\n//         // Optionally, update the payment status in your backend\n//       },\n//       prefill: {\n//         name: 'Buyer Name',\n//         email: 'buyer@example.com',\n//         contact: '1234567890',\n//       },\n//       theme: {\n//         color: '#F37254',\n//       },\n//     };\n\n//     const rzp1 = new window.Razorpay(options);  // Ensure Razorpay instance is created correctly\n//     rzp1.open();  // Open the payment window\n\n//   } catch (error) {\n//     console.error('Payment error:', error);\n//   }\n// };\n\n//   return (\n//     <div className=\"buy-product-container\">\n//       <h2>Available Products</h2>\n//       <div className=\"product-list\">\n//         {products.map((product) => (\n//           <div key={product._id} className=\"product-card\">\n//             <h3>{product.name}</h3>\n//             <p>Price: ₹{product.price}</p>\n//             <p>Seller: {product.seller}</p>\n//             <div className=\"button-group\">\n//               <button onClick={() => handleBuy(product._id, product.price, product.seller)}>Buy Now</button>\n//               <button\n//                 className=\"video-call-button\"\n//                 onClick={() => handleVideoCall(product.phone, product.name)}\n//               >\n//                 Video Call Seller\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BuyProduct;","map":{"version":3,"names":[],"sources":["D:/agri-community/client/src/components/Marketplace/BuyProduct.jsx"],"sourcesContent":["\r\n\r\n// // components/Marketplace/BuyProduct.jsx\r\n// import { useState, useEffect } from \"react\";\r\n// import '../../styles/buyproduct.css'\r\n// const BuyProduct = () => {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/marketplace\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProducts(data));\r\n//   }, []);\r\n\r\n//   const handleBuy = async (productId, price, sellerEmail) => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/payment/payment', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ productId, price, sellerEmail }),\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error('Payment creation failed');\r\n//       }\r\n  \r\n//       const data = await response.json();\r\n//       const razorpayOrderId = data.id;\r\n  \r\n//       // Razorpay integration\r\n//       const options = {\r\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,  // Make sure this is set in your .env file\r\n//         amount: price * 100, // Convert to paise\r\n//         currency: 'INR',\r\n//         order_id: razorpayOrderId,\r\n//         handler: function (response) {\r\n//           // Handle success (this would be a callback for successful payment)\r\n//           alert('Payment successful!');\r\n//           // Optionally, update the payment status in your backend\r\n//         },\r\n//         prefill: {\r\n//           name: 'Buyer Name',\r\n//           email: 'buyer@example.com',\r\n//           contact: '1234567890',\r\n//         },\r\n//         theme: {\r\n//           color: '#F37254',\r\n//         },\r\n//       };\r\n  \r\n//       const rzp1 = new window.Razorpay(options);  // Ensure Razorpay instance is created correctly\r\n//       rzp1.open();  // Open the payment window\r\n  \r\n//     } catch (error) {\r\n//       console.error('Payment error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"buy-product-container\">\r\n//       <h2>Available Products</h2>\r\n//       <div className=\"product-list\">\r\n//         {products.map((product) => (\r\n//           <div key={product._id} className=\"product-card\">\r\n//             <h3>{product.name}</h3>\r\n//             <p>Price: ₹{product.price}</p>\r\n//             <p>Seller: {product.seller}</p>\r\n//             <button onClick={() => handleBuy(product._id, product.price, product.seller)}>Buy Now</button>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BuyProduct;\r\n\r\n\r\n// // import { useState, useEffect } from \"react\";\r\n// // import '../../styles/buyproduct.css';\r\n\r\n// // const BuyProduct = () => {\r\n// //   const [products, setProducts] = useState([]);\r\n\r\n// //   useEffect(() => {\r\n// //     fetch(\"http://localhost:5000/api/marketplace\")\r\n// //       .then((response) => response.json())\r\n// //       .then((data) => setProducts(data));\r\n// //   }, []);\r\n\r\n// //   const handleVideoCall = async (sellerPhone, productName) => {\r\n// //     if (!sellerPhone || !productName) {\r\n// //       alert(\"Seller phone or product name is missing!\");\r\n// //       return;\r\n// //     }\r\n\r\n// //     try {\r\n// //       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\r\n// //         method: \"POST\",\r\n// //         headers: {\r\n// //           \"Content-Type\": \"application/json\",\r\n// //         },\r\n// //         body: JSON.stringify({ sellerPhone, productName }),\r\n// //       });\r\n\r\n// //       const data = await response.json();\r\n\r\n// //       if (!response.ok) {\r\n// //         throw new Error(data.error || \"Failed to send video call link\");\r\n// //       }\r\n\r\n// //       alert(`Video call link sent: ${data.meetingLink}`);\r\n// //     } catch (error) {\r\n// //       console.error(\"Error:\", error);\r\n// //       alert(\"Error sending video call link.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"buy-product-container\">\r\n// //       <h2>Available Products</h2>\r\n// //       <div className=\"product-list\">\r\n// //         {products.map((product) => (\r\n// //           <div key={product._id} className=\"product-card\">\r\n// //             <h3>{product.name}</h3>\r\n// //             <p>Price: ₹{product.price}</p>\r\n// //             <p>Seller: {product.seller}</p>\r\n// //             <div className=\"button-group\">\r\n// //               <button className=\"buy-button\">Buy Now</button>\r\n// //               <button\r\n// //                 className=\"video-call-button\"\r\n// //                 onClick={() => handleVideoCall(product.phone, product.name)}\r\n// //               >\r\n// //                 Video Call Seller\r\n// //               </button>\r\n// //             </div>\r\n// //           </div>\r\n// //         ))}\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default BuyProduct;\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import \"../../styles/buyproduct.css\";\r\n\r\n// const BuyProduct = () => {\r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/marketplace\")\r\n//       .then((response) => response.json())\r\n//       .then((data) => setProducts(data));\r\n//   }, []);\r\n\r\n//   const handleVideoCall = async (sellerPhone, productName) => {\r\n//     if (!sellerPhone || !productName) {\r\n//       alert(\"Seller phone or product name is missing!\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/video-call/send-link\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ sellerPhone, productName }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(data.error || \"Failed to create video call link\");\r\n//       }\r\n\r\n//       // ✅ Open the meeting link for the customer automatically\r\n//       window.open(data.meetingLink, \"_blank\");\r\n\r\n//       alert(`Video call link sent to seller: ${data.meetingLink}`);\r\n\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"Error starting video call.\");\r\n//     }\r\n//   };\r\n\r\n// const handleBuy = async (productId, price, sellerEmail) => {\r\n//   try {\r\n//     const response = await fetch('http://localhost:5000/api/payment/payment', {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify({ productId, price, sellerEmail }),\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error('Payment creation failed');\r\n//     }\r\n\r\n//     const data = await response.json();\r\n//     const razorpayOrderId = data.id;\r\n\r\n//     // Razorpay integration\r\n//     const options = {\r\n//       key: process.env.REACT_APP_RAZORPAY_KEY_ID,  // Make sure this is set in your .env file\r\n//       amount: price * 100, // Convert to paise\r\n//       currency: 'INR',\r\n//       order_id: razorpayOrderId,\r\n//       handler: function (response) {\r\n//         // Handle success (this would be a callback for successful payment)\r\n//         alert('Payment successful!');\r\n//         // Optionally, update the payment status in your backend\r\n//       },\r\n//       prefill: {\r\n//         name: 'Buyer Name',\r\n//         email: 'buyer@example.com',\r\n//         contact: '1234567890',\r\n//       },\r\n//       theme: {\r\n//         color: '#F37254',\r\n//       },\r\n//     };\r\n\r\n//     const rzp1 = new window.Razorpay(options);  // Ensure Razorpay instance is created correctly\r\n//     rzp1.open();  // Open the payment window\r\n\r\n//   } catch (error) {\r\n//     console.error('Payment error:', error);\r\n//   }\r\n// };\r\n\r\n//   return (\r\n//     <div className=\"buy-product-container\">\r\n//       <h2>Available Products</h2>\r\n//       <div className=\"product-list\">\r\n//         {products.map((product) => (\r\n//           <div key={product._id} className=\"product-card\">\r\n//             <h3>{product.name}</h3>\r\n//             <p>Price: ₹{product.price}</p>\r\n//             <p>Seller: {product.seller}</p>\r\n//             <div className=\"button-group\">\r\n//               <button onClick={() => handleBuy(product._id, product.price, product.seller)}>Buy Now</button>\r\n//               <button\r\n//                 className=\"video-call-button\"\r\n//                 onClick={() => handleVideoCall(product.phone, product.name)}\r\n//               >\r\n//                 Video Call Seller\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BuyProduct;\r\n\r\n\r\n\r\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}