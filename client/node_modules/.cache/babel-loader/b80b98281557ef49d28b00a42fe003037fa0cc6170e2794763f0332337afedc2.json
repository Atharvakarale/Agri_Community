{"ast":null,"code":"\"use strict\";\n\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Taskrouter\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReservationPage = exports.ReservationListInstance = exports.ReservationInstance = exports.ReservationContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass ReservationContextImpl {\n  constructor(_version, workspaceSid, taskSid, sid) {\n    this._version = _version;\n    if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n      throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(taskSid)) {\n      throw new Error(\"Parameter 'taskSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(sid)) {\n      throw new Error(\"Parameter 'sid' is not valid.\");\n    }\n    this._solution = {\n      workspaceSid,\n      taskSid,\n      sid\n    };\n    this._uri = `/Workspaces/${workspaceSid}/Tasks/${taskSid}/Reservations/${sid}`;\n  }\n  fetch(callback) {\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.fetch({\n        uri: instance._uri,\n        method: \"get\",\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ReservationInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.taskSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  update(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"reservationStatus\"] !== undefined) data[\"ReservationStatus\"] = params[\"reservationStatus\"];\n    if (params[\"workerActivitySid\"] !== undefined) data[\"WorkerActivitySid\"] = params[\"workerActivitySid\"];\n    if (params[\"instruction\"] !== undefined) data[\"Instruction\"] = params[\"instruction\"];\n    if (params[\"dequeuePostWorkActivitySid\"] !== undefined) data[\"DequeuePostWorkActivitySid\"] = params[\"dequeuePostWorkActivitySid\"];\n    if (params[\"dequeueFrom\"] !== undefined) data[\"DequeueFrom\"] = params[\"dequeueFrom\"];\n    if (params[\"dequeueRecord\"] !== undefined) data[\"DequeueRecord\"] = params[\"dequeueRecord\"];\n    if (params[\"dequeueTimeout\"] !== undefined) data[\"DequeueTimeout\"] = params[\"dequeueTimeout\"];\n    if (params[\"dequeueTo\"] !== undefined) data[\"DequeueTo\"] = params[\"dequeueTo\"];\n    if (params[\"dequeueStatusCallbackUrl\"] !== undefined) data[\"DequeueStatusCallbackUrl\"] = params[\"dequeueStatusCallbackUrl\"];\n    if (params[\"callFrom\"] !== undefined) data[\"CallFrom\"] = params[\"callFrom\"];\n    if (params[\"callRecord\"] !== undefined) data[\"CallRecord\"] = params[\"callRecord\"];\n    if (params[\"callTimeout\"] !== undefined) data[\"CallTimeout\"] = params[\"callTimeout\"];\n    if (params[\"callTo\"] !== undefined) data[\"CallTo\"] = params[\"callTo\"];\n    if (params[\"callUrl\"] !== undefined) data[\"CallUrl\"] = params[\"callUrl\"];\n    if (params[\"callStatusCallbackUrl\"] !== undefined) data[\"CallStatusCallbackUrl\"] = params[\"callStatusCallbackUrl\"];\n    if (params[\"callAccept\"] !== undefined) data[\"CallAccept\"] = serialize.bool(params[\"callAccept\"]);\n    if (params[\"redirectCallSid\"] !== undefined) data[\"RedirectCallSid\"] = params[\"redirectCallSid\"];\n    if (params[\"redirectAccept\"] !== undefined) data[\"RedirectAccept\"] = serialize.bool(params[\"redirectAccept\"]);\n    if (params[\"redirectUrl\"] !== undefined) data[\"RedirectUrl\"] = params[\"redirectUrl\"];\n    if (params[\"to\"] !== undefined) data[\"To\"] = params[\"to\"];\n    if (params[\"from\"] !== undefined) data[\"From\"] = params[\"from\"];\n    if (params[\"statusCallback\"] !== undefined) data[\"StatusCallback\"] = params[\"statusCallback\"];\n    if (params[\"statusCallbackMethod\"] !== undefined) data[\"StatusCallbackMethod\"] = params[\"statusCallbackMethod\"];\n    if (params[\"statusCallbackEvent\"] !== undefined) data[\"StatusCallbackEvent\"] = serialize.map(params[\"statusCallbackEvent\"], e => e);\n    if (params[\"timeout\"] !== undefined) data[\"Timeout\"] = params[\"timeout\"];\n    if (params[\"record\"] !== undefined) data[\"Record\"] = serialize.bool(params[\"record\"]);\n    if (params[\"muted\"] !== undefined) data[\"Muted\"] = serialize.bool(params[\"muted\"]);\n    if (params[\"beep\"] !== undefined) data[\"Beep\"] = params[\"beep\"];\n    if (params[\"startConferenceOnEnter\"] !== undefined) data[\"StartConferenceOnEnter\"] = serialize.bool(params[\"startConferenceOnEnter\"]);\n    if (params[\"endConferenceOnExit\"] !== undefined) data[\"EndConferenceOnExit\"] = serialize.bool(params[\"endConferenceOnExit\"]);\n    if (params[\"waitUrl\"] !== undefined) data[\"WaitUrl\"] = params[\"waitUrl\"];\n    if (params[\"waitMethod\"] !== undefined) data[\"WaitMethod\"] = params[\"waitMethod\"];\n    if (params[\"earlyMedia\"] !== undefined) data[\"EarlyMedia\"] = serialize.bool(params[\"earlyMedia\"]);\n    if (params[\"maxParticipants\"] !== undefined) data[\"MaxParticipants\"] = params[\"maxParticipants\"];\n    if (params[\"conferenceStatusCallback\"] !== undefined) data[\"ConferenceStatusCallback\"] = params[\"conferenceStatusCallback\"];\n    if (params[\"conferenceStatusCallbackMethod\"] !== undefined) data[\"ConferenceStatusCallbackMethod\"] = params[\"conferenceStatusCallbackMethod\"];\n    if (params[\"conferenceStatusCallbackEvent\"] !== undefined) data[\"ConferenceStatusCallbackEvent\"] = serialize.map(params[\"conferenceStatusCallbackEvent\"], e => e);\n    if (params[\"conferenceRecord\"] !== undefined) data[\"ConferenceRecord\"] = params[\"conferenceRecord\"];\n    if (params[\"conferenceTrim\"] !== undefined) data[\"ConferenceTrim\"] = params[\"conferenceTrim\"];\n    if (params[\"recordingChannels\"] !== undefined) data[\"RecordingChannels\"] = params[\"recordingChannels\"];\n    if (params[\"recordingStatusCallback\"] !== undefined) data[\"RecordingStatusCallback\"] = params[\"recordingStatusCallback\"];\n    if (params[\"recordingStatusCallbackMethod\"] !== undefined) data[\"RecordingStatusCallbackMethod\"] = params[\"recordingStatusCallbackMethod\"];\n    if (params[\"conferenceRecordingStatusCallback\"] !== undefined) data[\"ConferenceRecordingStatusCallback\"] = params[\"conferenceRecordingStatusCallback\"];\n    if (params[\"conferenceRecordingStatusCallbackMethod\"] !== undefined) data[\"ConferenceRecordingStatusCallbackMethod\"] = params[\"conferenceRecordingStatusCallbackMethod\"];\n    if (params[\"region\"] !== undefined) data[\"Region\"] = params[\"region\"];\n    if (params[\"sipAuthUsername\"] !== undefined) data[\"SipAuthUsername\"] = params[\"sipAuthUsername\"];\n    if (params[\"sipAuthPassword\"] !== undefined) data[\"SipAuthPassword\"] = params[\"sipAuthPassword\"];\n    if (params[\"dequeueStatusCallbackEvent\"] !== undefined) data[\"DequeueStatusCallbackEvent\"] = serialize.map(params[\"dequeueStatusCallbackEvent\"], e => e);\n    if (params[\"postWorkActivitySid\"] !== undefined) data[\"PostWorkActivitySid\"] = params[\"postWorkActivitySid\"];\n    if (params[\"supervisorMode\"] !== undefined) data[\"SupervisorMode\"] = params[\"supervisorMode\"];\n    if (params[\"supervisor\"] !== undefined) data[\"Supervisor\"] = params[\"supervisor\"];\n    if (params[\"endConferenceOnCustomerExit\"] !== undefined) data[\"EndConferenceOnCustomerExit\"] = serialize.bool(params[\"endConferenceOnCustomerExit\"]);\n    if (params[\"beepOnCustomerEntrance\"] !== undefined) data[\"BeepOnCustomerEntrance\"] = serialize.bool(params[\"beepOnCustomerEntrance\"]);\n    if (params[\"jitterBufferSize\"] !== undefined) data[\"JitterBufferSize\"] = params[\"jitterBufferSize\"];\n    const headers = {};\n    headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n    headers[\"Accept\"] = \"application/json\";\n    if (params[\"ifMatch\"] !== undefined) headers[\"If-Match\"] = params[\"ifMatch\"];\n    const instance = this;\n    let operationVersion = instance._version,\n      operationPromise = operationVersion.update({\n        uri: instance._uri,\n        method: \"post\",\n        data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ReservationInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.taskSid, instance._solution.sid));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return this._solution;\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ReservationContextImpl = ReservationContextImpl;\nclass ReservationInstance {\n  constructor(_version, payload, workspaceSid, taskSid, sid) {\n    this._version = _version;\n    this.accountSid = payload.account_sid;\n    this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n    this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n    this.reservationStatus = payload.reservation_status;\n    this.sid = payload.sid;\n    this.taskSid = payload.task_sid;\n    this.workerName = payload.worker_name;\n    this.workerSid = payload.worker_sid;\n    this.workspaceSid = payload.workspace_sid;\n    this.url = payload.url;\n    this.links = payload.links;\n    this._solution = {\n      workspaceSid,\n      taskSid,\n      sid: sid || this.sid\n    };\n  }\n  get _proxy() {\n    this._context = this._context || new ReservationContextImpl(this._version, this._solution.workspaceSid, this._solution.taskSid, this._solution.sid);\n    return this._context;\n  }\n  /**\n   * Fetch a ReservationInstance\n   *\n   * @param callback - Callback to handle processed record\n   *\n   * @returns Resolves to processed ReservationInstance\n   */\n  fetch(callback) {\n    return this._proxy.fetch(callback);\n  }\n  update(params, callback) {\n    return this._proxy.update(params, callback);\n  }\n  /**\n   * Provide a user-friendly representation\n   *\n   * @returns Object\n   */\n  toJSON() {\n    return {\n      accountSid: this.accountSid,\n      dateCreated: this.dateCreated,\n      dateUpdated: this.dateUpdated,\n      reservationStatus: this.reservationStatus,\n      sid: this.sid,\n      taskSid: this.taskSid,\n      workerName: this.workerName,\n      workerSid: this.workerSid,\n      workspaceSid: this.workspaceSid,\n      url: this.url,\n      links: this.links\n    };\n  }\n  [util_1.inspect.custom](_depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ReservationInstance = ReservationInstance;\nfunction ReservationListInstance(version, workspaceSid, taskSid) {\n  if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n    throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n  }\n  if (!(0, utility_1.isValidPathParam)(taskSid)) {\n    throw new Error(\"Parameter 'taskSid' is not valid.\");\n  }\n  const instance = sid => instance.get(sid);\n  instance.get = function get(sid) {\n    return new ReservationContextImpl(version, workspaceSid, taskSid, sid);\n  };\n  instance._version = version;\n  instance._solution = {\n    workspaceSid,\n    taskSid\n  };\n  instance._uri = `/Workspaces/${workspaceSid}/Tasks/${taskSid}/Reservations`;\n  instance.page = function page(params, callback) {\n    if (params instanceof Function) {\n      callback = params;\n      params = {};\n    } else {\n      params = params || {};\n    }\n    let data = {};\n    if (params[\"reservationStatus\"] !== undefined) data[\"ReservationStatus\"] = params[\"reservationStatus\"];\n    if (params[\"workerSid\"] !== undefined) data[\"WorkerSid\"] = params[\"workerSid\"];\n    if (params[\"pageSize\"] !== undefined) data[\"PageSize\"] = params[\"pageSize\"];\n    if (params.pageNumber !== undefined) data[\"Page\"] = params.pageNumber;\n    if (params.pageToken !== undefined) data[\"PageToken\"] = params.pageToken;\n    const headers = {};\n    headers[\"Accept\"] = \"application/json\";\n    let operationVersion = version,\n      operationPromise = operationVersion.page({\n        uri: instance._uri,\n        method: \"get\",\n        params: data,\n        headers\n      });\n    operationPromise = operationPromise.then(payload => new ReservationPage(operationVersion, payload, instance._solution));\n    operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n    return operationPromise;\n  };\n  instance.each = instance._version.each;\n  instance.list = instance._version.list;\n  instance.getPage = function getPage(targetUrl, callback) {\n    const operationPromise = instance._version._domain.twilio.request({\n      method: \"get\",\n      uri: targetUrl\n    });\n    let pagePromise = operationPromise.then(payload => new ReservationPage(instance._version, payload, instance._solution));\n    pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n    return pagePromise;\n  };\n  instance.toJSON = function toJSON() {\n    return instance._solution;\n  };\n  instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n    return (0, util_1.inspect)(instance.toJSON(), options);\n  };\n  return instance;\n}\nexports.ReservationListInstance = ReservationListInstance;\nclass ReservationPage extends Page_1.default {\n  /**\n   * Initialize the ReservationPage\n   *\n   * @param version - Version of the resource\n   * @param response - Response from the API\n   * @param solution - Path solution\n   */\n  constructor(version, response, solution) {\n    super(version, response, solution);\n  }\n  /**\n   * Build an instance of ReservationInstance\n   *\n   * @param payload - Payload response from the API\n   */\n  getInstance(payload) {\n    return new ReservationInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskSid);\n  }\n  [util_1.inspect.custom](depth, options) {\n    return (0, util_1.inspect)(this.toJSON(), options);\n  }\n}\nexports.ReservationPage = ReservationPage;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ReservationPage","ReservationListInstance","ReservationInstance","ReservationContextImpl","util_1","require","Page_1","deserialize","serialize","utility_1","constructor","_version","workspaceSid","taskSid","sid","isValidPathParam","Error","_solution","_uri","fetch","callback","headers","instance","operationVersion","operationPromise","uri","method","then","payload","setPromiseCallback","update","params","Function","data","undefined","bool","map","e","toJSON","inspect","custom","_depth","options","accountSid","account_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","reservationStatus","reservation_status","task_sid","workerName","worker_name","workerSid","worker_sid","workspace_sid","url","links","_proxy","_context","version","get","page","pageNumber","pageToken","each","list","getPage","targetUrl","_domain","twilio","request","pagePromise","inspectImpl","default","response","solution","getInstance","depth"],"sources":["D:/agri-community/client/node_modules/twilio/lib/rest/taskrouter/v1/workspace/task/reservation.js"],"sourcesContent":["\"use strict\";\n/*\n * This code was generated by\n * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __\n *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\\ | |___ |__/ |__|  | |  | |__/\n *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \\| |___ |  \\ |  |  | |__| |  \\\n *\n * Twilio - Taskrouter\n * This is the public Twilio REST API.\n *\n * NOTE: This class is auto generated by OpenAPI Generator.\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReservationPage = exports.ReservationListInstance = exports.ReservationInstance = exports.ReservationContextImpl = void 0;\nconst util_1 = require(\"util\");\nconst Page_1 = __importDefault(require(\"../../../../../base/Page\"));\nconst deserialize = require(\"../../../../../base/deserialize\");\nconst serialize = require(\"../../../../../base/serialize\");\nconst utility_1 = require(\"../../../../../base/utility\");\nclass ReservationContextImpl {\n    constructor(_version, workspaceSid, taskSid, sid) {\n        this._version = _version;\n        if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n            throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(taskSid)) {\n            throw new Error(\"Parameter 'taskSid' is not valid.\");\n        }\n        if (!(0, utility_1.isValidPathParam)(sid)) {\n            throw new Error(\"Parameter 'sid' is not valid.\");\n        }\n        this._solution = { workspaceSid, taskSid, sid };\n        this._uri = `/Workspaces/${workspaceSid}/Tasks/${taskSid}/Reservations/${sid}`;\n    }\n    fetch(callback) {\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.fetch({\n            uri: instance._uri,\n            method: \"get\",\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ReservationInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.taskSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    update(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"reservationStatus\"] !== undefined)\n            data[\"ReservationStatus\"] = params[\"reservationStatus\"];\n        if (params[\"workerActivitySid\"] !== undefined)\n            data[\"WorkerActivitySid\"] = params[\"workerActivitySid\"];\n        if (params[\"instruction\"] !== undefined)\n            data[\"Instruction\"] = params[\"instruction\"];\n        if (params[\"dequeuePostWorkActivitySid\"] !== undefined)\n            data[\"DequeuePostWorkActivitySid\"] = params[\"dequeuePostWorkActivitySid\"];\n        if (params[\"dequeueFrom\"] !== undefined)\n            data[\"DequeueFrom\"] = params[\"dequeueFrom\"];\n        if (params[\"dequeueRecord\"] !== undefined)\n            data[\"DequeueRecord\"] = params[\"dequeueRecord\"];\n        if (params[\"dequeueTimeout\"] !== undefined)\n            data[\"DequeueTimeout\"] = params[\"dequeueTimeout\"];\n        if (params[\"dequeueTo\"] !== undefined)\n            data[\"DequeueTo\"] = params[\"dequeueTo\"];\n        if (params[\"dequeueStatusCallbackUrl\"] !== undefined)\n            data[\"DequeueStatusCallbackUrl\"] = params[\"dequeueStatusCallbackUrl\"];\n        if (params[\"callFrom\"] !== undefined)\n            data[\"CallFrom\"] = params[\"callFrom\"];\n        if (params[\"callRecord\"] !== undefined)\n            data[\"CallRecord\"] = params[\"callRecord\"];\n        if (params[\"callTimeout\"] !== undefined)\n            data[\"CallTimeout\"] = params[\"callTimeout\"];\n        if (params[\"callTo\"] !== undefined)\n            data[\"CallTo\"] = params[\"callTo\"];\n        if (params[\"callUrl\"] !== undefined)\n            data[\"CallUrl\"] = params[\"callUrl\"];\n        if (params[\"callStatusCallbackUrl\"] !== undefined)\n            data[\"CallStatusCallbackUrl\"] = params[\"callStatusCallbackUrl\"];\n        if (params[\"callAccept\"] !== undefined)\n            data[\"CallAccept\"] = serialize.bool(params[\"callAccept\"]);\n        if (params[\"redirectCallSid\"] !== undefined)\n            data[\"RedirectCallSid\"] = params[\"redirectCallSid\"];\n        if (params[\"redirectAccept\"] !== undefined)\n            data[\"RedirectAccept\"] = serialize.bool(params[\"redirectAccept\"]);\n        if (params[\"redirectUrl\"] !== undefined)\n            data[\"RedirectUrl\"] = params[\"redirectUrl\"];\n        if (params[\"to\"] !== undefined)\n            data[\"To\"] = params[\"to\"];\n        if (params[\"from\"] !== undefined)\n            data[\"From\"] = params[\"from\"];\n        if (params[\"statusCallback\"] !== undefined)\n            data[\"StatusCallback\"] = params[\"statusCallback\"];\n        if (params[\"statusCallbackMethod\"] !== undefined)\n            data[\"StatusCallbackMethod\"] = params[\"statusCallbackMethod\"];\n        if (params[\"statusCallbackEvent\"] !== undefined)\n            data[\"StatusCallbackEvent\"] = serialize.map(params[\"statusCallbackEvent\"], (e) => e);\n        if (params[\"timeout\"] !== undefined)\n            data[\"Timeout\"] = params[\"timeout\"];\n        if (params[\"record\"] !== undefined)\n            data[\"Record\"] = serialize.bool(params[\"record\"]);\n        if (params[\"muted\"] !== undefined)\n            data[\"Muted\"] = serialize.bool(params[\"muted\"]);\n        if (params[\"beep\"] !== undefined)\n            data[\"Beep\"] = params[\"beep\"];\n        if (params[\"startConferenceOnEnter\"] !== undefined)\n            data[\"StartConferenceOnEnter\"] = serialize.bool(params[\"startConferenceOnEnter\"]);\n        if (params[\"endConferenceOnExit\"] !== undefined)\n            data[\"EndConferenceOnExit\"] = serialize.bool(params[\"endConferenceOnExit\"]);\n        if (params[\"waitUrl\"] !== undefined)\n            data[\"WaitUrl\"] = params[\"waitUrl\"];\n        if (params[\"waitMethod\"] !== undefined)\n            data[\"WaitMethod\"] = params[\"waitMethod\"];\n        if (params[\"earlyMedia\"] !== undefined)\n            data[\"EarlyMedia\"] = serialize.bool(params[\"earlyMedia\"]);\n        if (params[\"maxParticipants\"] !== undefined)\n            data[\"MaxParticipants\"] = params[\"maxParticipants\"];\n        if (params[\"conferenceStatusCallback\"] !== undefined)\n            data[\"ConferenceStatusCallback\"] = params[\"conferenceStatusCallback\"];\n        if (params[\"conferenceStatusCallbackMethod\"] !== undefined)\n            data[\"ConferenceStatusCallbackMethod\"] =\n                params[\"conferenceStatusCallbackMethod\"];\n        if (params[\"conferenceStatusCallbackEvent\"] !== undefined)\n            data[\"ConferenceStatusCallbackEvent\"] = serialize.map(params[\"conferenceStatusCallbackEvent\"], (e) => e);\n        if (params[\"conferenceRecord\"] !== undefined)\n            data[\"ConferenceRecord\"] = params[\"conferenceRecord\"];\n        if (params[\"conferenceTrim\"] !== undefined)\n            data[\"ConferenceTrim\"] = params[\"conferenceTrim\"];\n        if (params[\"recordingChannels\"] !== undefined)\n            data[\"RecordingChannels\"] = params[\"recordingChannels\"];\n        if (params[\"recordingStatusCallback\"] !== undefined)\n            data[\"RecordingStatusCallback\"] = params[\"recordingStatusCallback\"];\n        if (params[\"recordingStatusCallbackMethod\"] !== undefined)\n            data[\"RecordingStatusCallbackMethod\"] =\n                params[\"recordingStatusCallbackMethod\"];\n        if (params[\"conferenceRecordingStatusCallback\"] !== undefined)\n            data[\"ConferenceRecordingStatusCallback\"] =\n                params[\"conferenceRecordingStatusCallback\"];\n        if (params[\"conferenceRecordingStatusCallbackMethod\"] !== undefined)\n            data[\"ConferenceRecordingStatusCallbackMethod\"] =\n                params[\"conferenceRecordingStatusCallbackMethod\"];\n        if (params[\"region\"] !== undefined)\n            data[\"Region\"] = params[\"region\"];\n        if (params[\"sipAuthUsername\"] !== undefined)\n            data[\"SipAuthUsername\"] = params[\"sipAuthUsername\"];\n        if (params[\"sipAuthPassword\"] !== undefined)\n            data[\"SipAuthPassword\"] = params[\"sipAuthPassword\"];\n        if (params[\"dequeueStatusCallbackEvent\"] !== undefined)\n            data[\"DequeueStatusCallbackEvent\"] = serialize.map(params[\"dequeueStatusCallbackEvent\"], (e) => e);\n        if (params[\"postWorkActivitySid\"] !== undefined)\n            data[\"PostWorkActivitySid\"] = params[\"postWorkActivitySid\"];\n        if (params[\"supervisorMode\"] !== undefined)\n            data[\"SupervisorMode\"] = params[\"supervisorMode\"];\n        if (params[\"supervisor\"] !== undefined)\n            data[\"Supervisor\"] = params[\"supervisor\"];\n        if (params[\"endConferenceOnCustomerExit\"] !== undefined)\n            data[\"EndConferenceOnCustomerExit\"] = serialize.bool(params[\"endConferenceOnCustomerExit\"]);\n        if (params[\"beepOnCustomerEntrance\"] !== undefined)\n            data[\"BeepOnCustomerEntrance\"] = serialize.bool(params[\"beepOnCustomerEntrance\"]);\n        if (params[\"jitterBufferSize\"] !== undefined)\n            data[\"JitterBufferSize\"] = params[\"jitterBufferSize\"];\n        const headers = {};\n        headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        headers[\"Accept\"] = \"application/json\";\n        if (params[\"ifMatch\"] !== undefined)\n            headers[\"If-Match\"] = params[\"ifMatch\"];\n        const instance = this;\n        let operationVersion = instance._version, operationPromise = operationVersion.update({\n            uri: instance._uri,\n            method: \"post\",\n            data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ReservationInstance(operationVersion, payload, instance._solution.workspaceSid, instance._solution.taskSid, instance._solution.sid));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return this._solution;\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ReservationContextImpl = ReservationContextImpl;\nclass ReservationInstance {\n    constructor(_version, payload, workspaceSid, taskSid, sid) {\n        this._version = _version;\n        this.accountSid = payload.account_sid;\n        this.dateCreated = deserialize.iso8601DateTime(payload.date_created);\n        this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated);\n        this.reservationStatus = payload.reservation_status;\n        this.sid = payload.sid;\n        this.taskSid = payload.task_sid;\n        this.workerName = payload.worker_name;\n        this.workerSid = payload.worker_sid;\n        this.workspaceSid = payload.workspace_sid;\n        this.url = payload.url;\n        this.links = payload.links;\n        this._solution = { workspaceSid, taskSid, sid: sid || this.sid };\n    }\n    get _proxy() {\n        this._context =\n            this._context ||\n                new ReservationContextImpl(this._version, this._solution.workspaceSid, this._solution.taskSid, this._solution.sid);\n        return this._context;\n    }\n    /**\n     * Fetch a ReservationInstance\n     *\n     * @param callback - Callback to handle processed record\n     *\n     * @returns Resolves to processed ReservationInstance\n     */\n    fetch(callback) {\n        return this._proxy.fetch(callback);\n    }\n    update(params, callback) {\n        return this._proxy.update(params, callback);\n    }\n    /**\n     * Provide a user-friendly representation\n     *\n     * @returns Object\n     */\n    toJSON() {\n        return {\n            accountSid: this.accountSid,\n            dateCreated: this.dateCreated,\n            dateUpdated: this.dateUpdated,\n            reservationStatus: this.reservationStatus,\n            sid: this.sid,\n            taskSid: this.taskSid,\n            workerName: this.workerName,\n            workerSid: this.workerSid,\n            workspaceSid: this.workspaceSid,\n            url: this.url,\n            links: this.links,\n        };\n    }\n    [util_1.inspect.custom](_depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ReservationInstance = ReservationInstance;\nfunction ReservationListInstance(version, workspaceSid, taskSid) {\n    if (!(0, utility_1.isValidPathParam)(workspaceSid)) {\n        throw new Error(\"Parameter 'workspaceSid' is not valid.\");\n    }\n    if (!(0, utility_1.isValidPathParam)(taskSid)) {\n        throw new Error(\"Parameter 'taskSid' is not valid.\");\n    }\n    const instance = ((sid) => instance.get(sid));\n    instance.get = function get(sid) {\n        return new ReservationContextImpl(version, workspaceSid, taskSid, sid);\n    };\n    instance._version = version;\n    instance._solution = { workspaceSid, taskSid };\n    instance._uri = `/Workspaces/${workspaceSid}/Tasks/${taskSid}/Reservations`;\n    instance.page = function page(params, callback) {\n        if (params instanceof Function) {\n            callback = params;\n            params = {};\n        }\n        else {\n            params = params || {};\n        }\n        let data = {};\n        if (params[\"reservationStatus\"] !== undefined)\n            data[\"ReservationStatus\"] = params[\"reservationStatus\"];\n        if (params[\"workerSid\"] !== undefined)\n            data[\"WorkerSid\"] = params[\"workerSid\"];\n        if (params[\"pageSize\"] !== undefined)\n            data[\"PageSize\"] = params[\"pageSize\"];\n        if (params.pageNumber !== undefined)\n            data[\"Page\"] = params.pageNumber;\n        if (params.pageToken !== undefined)\n            data[\"PageToken\"] = params.pageToken;\n        const headers = {};\n        headers[\"Accept\"] = \"application/json\";\n        let operationVersion = version, operationPromise = operationVersion.page({\n            uri: instance._uri,\n            method: \"get\",\n            params: data,\n            headers,\n        });\n        operationPromise = operationPromise.then((payload) => new ReservationPage(operationVersion, payload, instance._solution));\n        operationPromise = instance._version.setPromiseCallback(operationPromise, callback);\n        return operationPromise;\n    };\n    instance.each = instance._version.each;\n    instance.list = instance._version.list;\n    instance.getPage = function getPage(targetUrl, callback) {\n        const operationPromise = instance._version._domain.twilio.request({\n            method: \"get\",\n            uri: targetUrl,\n        });\n        let pagePromise = operationPromise.then((payload) => new ReservationPage(instance._version, payload, instance._solution));\n        pagePromise = instance._version.setPromiseCallback(pagePromise, callback);\n        return pagePromise;\n    };\n    instance.toJSON = function toJSON() {\n        return instance._solution;\n    };\n    instance[util_1.inspect.custom] = function inspectImpl(_depth, options) {\n        return (0, util_1.inspect)(instance.toJSON(), options);\n    };\n    return instance;\n}\nexports.ReservationListInstance = ReservationListInstance;\nclass ReservationPage extends Page_1.default {\n    /**\n     * Initialize the ReservationPage\n     *\n     * @param version - Version of the resource\n     * @param response - Response from the API\n     * @param solution - Path solution\n     */\n    constructor(version, response, solution) {\n        super(version, response, solution);\n    }\n    /**\n     * Build an instance of ReservationInstance\n     *\n     * @param payload - Payload response from the API\n     */\n    getInstance(payload) {\n        return new ReservationInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskSid);\n    }\n    [util_1.inspect.custom](depth, options) {\n        return (0, util_1.inspect)(this.toJSON(), options);\n    }\n}\nexports.ReservationPage = ReservationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}